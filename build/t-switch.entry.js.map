{"file":"t-switch.entry.esm.js","mappings":";;AAAA,MAAM,UAAU,GAAG,ouDAAouD;;MCO1uD,OAAO;;;;QAOlB,iBAAY,GAAG,CAAC,KAAiB;YAC/B,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAClC,CAAC;uBANyB,KAAK;mBACV,CAAC;;IAOvB,MAAM;QACJ,OAAO,gFAAyB,gBAAgB,EAAE,IAAI,CAAC,GAAG,IACxD,8DAAO,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,SAAS,IACtC,6DAAM,KAAK,EAAC,QAAQ,IAClB,8DAAO,EAAE,EAAC,OAAO,EAAC,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,GAAI,EACxF,6DAAM,KAAK,EAAC,QAAQ,GAAG,CAClB,EACL,6DAAM,KAAK,EAAC,OAAO,IAAC,8DAAQ,CAAO,CAC7B,CACgB,CAAC;KAC5B;;;;;;","names":[],"sources":["src/components/t-switch/t-switch.css?tag=t-switch&encapsulation=shadow","src/components/t-switch/t-switch.tsx"],"sourcesContent":[".wrapper {\n  display: inline-flex;\n  flex-direction: row;\n  gap: var(--t-spacing-inline);\n  align-items: center;\n}\n\n.switch {\n  --height: 1.5rem;\n  --padding: 1px;\n  --width: calc(var(--height) * 2);\n  --hover-translate: 4px;\n  --border-width: 1px;\n  position: relative;\n  display: inline-block;\n  height: var(--height);\n  width: var(--width);\n  box-sizing: border-box;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  --gradient-factor: -0.1;\n  --chroma: 0;\n  --fill-colour: var(--t-input-field-background-colour);\n  background: linear-gradient(\n    to bottom,\n    oklch(from var(--fill-colour) calc(l * (1 + var(--gradient-factor))) c h),\n    var(--fill-colour),\n    oklch(from var(--fill-colour) calc(l * (1 - var(--gradient-factor))) c h)\n  );\n  border-radius: 100px;\n  border:\n    var(--border-width)\n    solid\n    var(--t-base-border-colour);\n  bottom: 0;\n  box-shadow: #0004 0 1px 2px 1px inset;\n  box-sizing: border-box;\n  cursor: pointer;\n  height: var(--height);\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  transition: var(--t-transition-duration-long);\n  width: var(--width);\n}\n\n.slider:before {\n  aspect-ratio: 1;\n  background-color: var(--t-base-fill-colour);\n  border-radius: 50%;\n  top: var(--padding);\n  content: \"\";\n\n  height: calc(var(--height) - var(--padding) * 2 - var(--border-width) * 2);\n  left: var(--padding);\n  position: absolute;\n  transition: var(--t-transition-duration-short);\n}\n\ninput:checked + .slider {\n  --chroma: 0.4;\n  --gradient-factor: 0.1;\n  --fill-colour: var(--t-base-fill-colour);\n  box-shadow: none;\n}\n\ninput:checked + .slider:before {\n  transform: translateX(calc(var(--width) - var(--height)));\n  background-color: var(--t-page-background-colour);\n}\n\n.switch:has(:focus-visible) .slider {\n  outline: #000 auto 2px;\n}\n\n.wrapper:hover .slider:before {\n  transform: translateX(var(--hover-translate));\n}\n\n.wrapper:hover input:checked + .slider:before {\n  transform: translateX(calc(var(--width) - var(--height) - var(--hover-translate)));\n}\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 't-switch',\n  styleUrl: 't-switch.css',\n  shadow: true,\n})\nexport class TSwitch {\n\n  @Event() switch: EventEmitter<boolean>;\n\n  @Prop() checked: boolean = false;\n  @Prop() hue: number = 0;\n\n  handleChange = (event: InputEvent) => {\n    const target = event.target as HTMLInputElement;\n    this.switch.emit(target.checked);\n  };\n\n  render() {\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\n      <label htmlFor=\"input\" class=\"wrapper\">\n      <span class=\"switch\">\n        <input id=\"input\" type=\"checkbox\" onChange={this.handleChange} checked={this.checked} />\n        <span class=\"slider\" />\n      </span>\n        <span class=\"label\"><slot /></span>\n      </label>\n    </internal-style-provider>;\n  }\n}\n"],"version":3}