{"file":"t-integer-picker.entry.esm.js","mappings":";;AAAA,MAAM,iBAAiB,GAAG,yIAAyI;;ACAnK,MAAM,YAAY,GAAG,kvBAAkvB;;MCQ1vB,cAAc;;;;QAUjB,iBAAY,GAAG,CAAC,KAAiB;YACvC,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;SAC/C,CAAC;;;;;;;IAEF,MAAM;QACJ,OAAO,gFAAyB,gBAAgB,EAAE,IAAI,CAAC,GAAG,IACxD,iFACE,8DAAO,OAAO,EAAC,OAAO,EAAC,IAAI,EAAC,OAAO,IAAE,IAAI,CAAC,KAAK,CAAS,EACxD,8DACE,KAAK,EAAC,YAAY,EAClB,EAAE,EAAC,OAAO,EACV,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,IAAI,EAAC,OAAO,EACZ,IAAI,EAAC,QAAQ,EACb,KAAK,EAAE,IAAI,CAAC,KAAK,GACjB,CACqB,CACD,CAAC;KAC5B;;;;;;","names":[],"sources":["src/components/t-integer-picker/t-integer-picker.css?tag=t-integer-picker&encapsulation=shadow","src/style/text-input.css?tag=t-integer-picker&encapsulation=shadow","src/components/t-integer-picker/t-integer-picker.tsx"],"sourcesContent":["input::-webkit-inner-spin-button {\r\n  height: var(--height);\r\n  cursor: pointer;\r\n  margin-right: calc(-1 * var(--padding));\r\n  margin-left: var(--padding);\r\n}\r\n",".text-input {\r\n  --font-size: var(--t-default-font-size);\r\n  --height: 1.5rem;\r\n  --padding: calc((var(--height) - var(--t-default-font-size))/2);\r\n  background-color: var(--t-input-field-background-colour);\r\n  border-radius: 6px;\r\n  border: 1px solid var(--t-base-border-colour);\r\n  box-shadow: inset 1px 1px 1px rgba(0,0,0,0.3);\r\n  box-sizing: border-box;\r\n  color: var(--t-font-colour-default);\r\n  line-height: var(--font-size);\r\n  outline: none;\r\n  padding: var(--padding);\r\n  transition: var(--t-transition-duration-medium);\r\n}\r\n\r\n.text-input:focus {\r\n  transform: scale(1.05);\r\n  background-color: var(--t-page-background-colour);\r\n  box-shadow: color-mix(in oklab, var(--t-base-border-colour) 20%, transparent) 0 0 24px;\r\n}\r\n\r\n.text-input::selection {\r\n  background-color: var(--t-selection-background-colour);\r\n  color: var(--t-selection-font-colour);\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\n\r\n@Component({\r\n  tag: 't-integer-picker',\r\n  styleUrls: ['t-integer-picker.css', '../../style/text-input.css'],\r\n  shadow: true,\r\n})\r\nexport class TIntegerPicker {\r\n\r\n  @Prop() label: string;\r\n  @Prop() value: number;\r\n  @Prop() min: number;\r\n  @Prop() max: number;\r\n  @Prop() hue: ComponentHue;\r\n\r\n  @Event() integerChange: EventEmitter<number>;\r\n\r\n  private handleChange = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.integerChange.emit(target.valueAsNumber);\r\n  };\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <internal-input-wrapper>\r\n        <label htmlFor=\"input\" slot=\"label\">{this.label}</label>\r\n        <input\r\n          class=\"text-input\"\r\n          id=\"input\"\r\n          max={this.max}\r\n          min={this.min}\r\n          onChange={this.handleChange}\r\n          slot=\"input\"\r\n          type=\"number\"\r\n          value={this.value}\r\n        />\r\n      </internal-input-wrapper>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n"],"version":3}