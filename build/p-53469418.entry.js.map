{"version":3,"names":["ComponentColourSettings","this","handleHueChange","detail","hue","newSettings","Object","assign","settings","changeSettings","emit","handleSaturationChange","chroma","handleNumberOfHuesChange","numberOfHues","render","h","key","legend","label","onHueChange","value","onSaturationChange","onIntegerChange","min","max","tArticleListCss","TArticleListStyle0","TArticleList","hueOffsetInTurns","class","items","map","item","Item","href","title","intro","date","toLocaleDateString","tButtonCss","TButtonStyle0","TButton","type","buttonAttributes","tColumnCss","TColumnStyle0","TColumn","tFieldsetCss","TFieldsetStyle0","TFieldset","tHeadingCss","THeadingStyle0","THeading","level","tHuePickerCss","THuePickerStyle0","THuePicker","handleSliderChange","event","hueChange","onSliderChange","step","tIntegerPickerCss","TIntegerPickerStyle0","textInputCss","TIntegerPickerStyle1","TIntegerPicker","handleChange","target","integerChange","valueAsNumber","htmlFor","slot","id","onChange","ChevronRightIcon","_a","rest","__rest$1","SvgTemplate","d","fill","tLayoutMainCss","TLayoutMainStyle0","TLayoutMain","toggleLeftbar","leftbarOpen","stateClass","stickyLeftbar","name","onClick","dFilled","dUnfilled","ExternalLinkIcon","__rest","tLinkCss","TLinkStyle0","TLink","external","tRowCss","TRowStyle0","TRow","tSaturationPickerCss","TSaturationPickerStyle0","TSaturationPicker","saturationChange","TSelectStyle0","TSelect","labelPlacement","options","option","selected","tSpinnerCss","TSpinnerStyle0","TSpinner","tSwitchCss","TSwitchStyle0","TSwitch","switch","checked","tTextfieldCss","TTextfieldStyle0","TTextfieldStyle1","TTextfield","onInput","e","valueChange"],"sources":["src/preview-app/component-colour-settings/component-colour-settings.tsx","src/components/t-article-list/t-article-list.css?tag=t-article-list&encapsulation=shadow","src/components/t-article-list/t-article-list.tsx","src/components/t-button/t-button.css?tag=t-button&encapsulation=shadow","src/components/t-button/t-button.tsx","src/components/t-column/t-column.css?tag=t-column&encapsulation=shadow","src/components/t-column/t-column.tsx","src/components/t-fieldset/t-fieldset.css?tag=t-fieldset&encapsulation=shadow","src/components/t-fieldset/t-fieldset.tsx","src/components/t-heading/t-heading.css?tag=t-heading&encapsulation=shadow","src/components/t-heading/t-heading.tsx","src/components/t-hue-picker/t-hue-picker.css?tag=t-hue-picker&encapsulation=shadow","src/components/t-hue-picker/t-hue-picker.tsx","src/components/t-integer-picker/t-integer-picker.css?tag=t-integer-picker&encapsulation=shadow","src/style/text-input.css?tag=t-integer-picker&encapsulation=shadow","src/components/t-integer-picker/t-integer-picker.tsx","src/icons/ChevronRightIcon.tsx","src/components/t-layout-main/t-layout-main.css?tag=t-layout-main","src/components/t-layout-main/t-layout-main.tsx","src/icons/ExternalLinkIcon.tsx","src/components/t-link/t-link.css?tag=t-link&encapsulation=shadow","src/components/t-link/t-link.tsx","src/components/t-row/t-row.css?tag=t-row&encapsulation=shadow","src/components/t-row/t-row.tsx","src/components/t-saturation-picker/t-saturation-picker.css?tag=t-saturation-picker&encapsulation=shadow","src/components/t-saturation-picker/t-saturation-picker.tsx","src/style/text-input.css?tag=t-select&encapsulation=shadow","src/components/t-select/t-select.tsx","src/components/t-spinner/t-spinner.css?tag=t-spinner&encapsulation=shadow","src/components/t-spinner/t-spinner.tsx","src/components/t-switch/t-switch.css?tag=t-switch&encapsulation=shadow","src/components/t-switch/t-switch.tsx","src/components/t-textfield/t-textfield.css?tag=t-textfield&encapsulation=shadow","src/style/text-input.css?tag=t-textfield&encapsulation=shadow","src/components/t-textfield/t-textfield.tsx"],"sourcesContent":["import { Component, EventEmitter, h, Prop, Event } from '@stencil/core';\r\nimport { ColourSettings } from '../../types/ColourSettings';\r\nimport { THuePickerCustomEvent, TIntegerPickerCustomEvent, TSaturationPickerCustomEvent } from '../../components';\r\n\r\n@Component({\r\n  tag: 'component-colour-settings',\r\n})\r\nexport class ComponentColourSettings {\r\n\r\n  @Prop() settings: ColourSettings;\r\n\r\n  @Event() changeSettings: EventEmitter<ColourSettings>;\r\n\r\n  handleHueChange = ({ detail: hue }: THuePickerCustomEvent<number>) => {\r\n    const newSettings: ColourSettings = { ...this.settings, hue };\r\n    this.changeSettings.emit(newSettings);\r\n  };\r\n\r\n  handleSaturationChange = ({ detail: chroma }: TSaturationPickerCustomEvent<number>) => {\r\n    const newSettings: ColourSettings = { ...this.settings, chroma };\r\n    this.changeSettings.emit(newSettings);\r\n  };\r\n\r\n  handleNumberOfHuesChange = ({ detail: numberOfHues }: TIntegerPickerCustomEvent<number>) => {\r\n    const newSettings: ColourSettings = { ...this.settings, numberOfHues };\r\n    this.changeSettings.emit(newSettings);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <t-fieldset legend='Innstillinger'>\r\n        <t-column>\r\n          <t-hue-picker label=\"Hovedfargetone\" onHueChange={this.handleHueChange} value={this.settings.hue} />\r\n          <t-saturation-picker\r\n            label=\"Metning\"\r\n            onSaturationChange={this.handleSaturationChange}\r\n            value={this.settings.chroma}\r\n          />\r\n          <t-integer-picker\r\n            label=\"Antall fargetoner\"\r\n            onIntegerChange={this.handleNumberOfHuesChange}\r\n            value={this.settings.numberOfHues}\r\n            min={1}\r\n            max={10}\r\n          />\r\n        </t-column>\r\n      </t-fieldset>\r\n    );\r\n  }\r\n}\r\n","ul.t-article-list {\r\n  container-type: inline-size;\r\n  container-name: article-list;\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n\r\n  li a {\r\n    --background-colour: var(--t-small-contrast-colour);\r\n\r\n    background-color: var(--background-colour);\r\n    color: var(--t-font-colour-default);\r\n    column-gap: var(--t-spacing-in-group);\r\n    display: grid;\r\n    grid-template: \"title date\" auto\r\n                   \"intro date\" auto\r\n                   / 1fr auto;\r\n    padding: var(--t-spacing-in-group);\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      --background-colour: var(--t-base-colour);\r\n    }\r\n\r\n    .item-title {\r\n      font-weight: bold;\r\n      grid-area: title;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    .item-intro {\r\n      grid-area: intro;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    .item-date {\r\n      align-self: center;\r\n      grid-area: date;\r\n      text-align: right;\r\n    }\r\n  }\r\n\r\n  li:first-child a {\r\n    border-top-left-radius: var(--t-border-radius-default);\r\n    border-top-right-radius: var(--t-border-radius-default);\r\n  }\r\n\r\n  li:last-child a {\r\n    border-bottom-left-radius: var(--t-border-radius-default);\r\n    border-bottom-right-radius: var(--t-border-radius-default);\r\n  }\r\n}\r\n\r\n@container article-list (max-width: 600px) {\r\n  ul.t-article-list li a {\r\n    grid-template:\r\n        \"title title\"\r\n        \"intro date\"\r\n        / 1fr auto;\r\n  }\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\nimport { TArticleListItem } from './TArticleListItem';\r\n\r\n@Component({\r\n  tag: 't-article-list',\r\n  styleUrl: 't-article-list.css',\r\n  shadow: true,\r\n})\r\nexport class TArticleList {\r\n\r\n  @Prop() hue: ComponentHue = 0;\r\n  @Prop() items: TArticleListItem[] = [];\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <ul class='t-article-list'>\r\n        {this.items.map(item => <Item item={item} />)}\r\n      </ul>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n\r\nconst Item = ({ item }: { item: TArticleListItem }) => {\r\n  return <li>\r\n    <a href={item.href} title={item.title}>\r\n      <span class='item-title'>{item.title}</span>\r\n      <span class='item-intro'>{item.intro}</span>\r\n      <span class='item-date'>{item.date.toLocaleDateString()}</span>\r\n    </a>\r\n  </li>;\r\n}\r\n",".t-button {\r\n  --button-colour: var(--t-base-colour);\r\n  background: linear-gradient(\r\n    to top,\r\n    color-mix(in oklab, var(--button-colour) 90%, black),\r\n    var(--button-colour),\r\n    color-mix(in oklab, var(--button-colour) 90%, white)\r\n  );\r\n  box-shadow:\r\n    inset color-mix(in oklab, var(--button-colour) 75%, white) 0 1px,\r\n    inset color-mix(in oklab, var(--button-colour) 75%, black) 0 -1px,\r\n    color-mix(in oklab, white 30%, transparent) 0 1px 1px,\r\n    color-mix(in oklab, black 10%, transparent) 0 -1px 1px,\r\n    rgb(0 0 0 / 0.2) 0 -1px 1px;\r\n  border-radius: 100px;\r\n  border: 0 solid var(--t-base-border-colour);\r\n  color: var(--t-font-colour-default);\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  padding: .5rem;\r\n  transition: box-shadow var(--transistion-duration);\r\n  line-height: 1;\r\n}\r\n\r\n.t-button:hover {\r\n  --button-colour: color-mix(in oklab, var(--t-base-colour) 75%, white);\r\n}\r\n\r\n.t-button:active {\r\n  --transistion-duration: 0s;\r\n  background: var(--button-colour);\r\n}\r\n\r\n* {\r\n  --t-base-colour-hue-offset: 180;\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\nimport { ButtonAttributes } from '../../types/HTMLAttributes';\r\n\r\n@Component({\r\n  tag: 't-button',\r\n  styleUrl: 't-button.css',\r\n  shadow: true,\r\n})\r\nexport class TButton {\r\n\r\n  @Prop() hue: ComponentHue = 0;\r\n  @Prop() buttonAttributes: ButtonAttributes;\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <button class='t-button' type='button' {...this.buttonAttributes}>\r\n        <slot />\r\n      </button>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n","div {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: var(--t-spacing-default);\r\n}\r\n","import { Component, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-column',\r\n  styleUrl: 't-column.css',\r\n  shadow: true\r\n})\r\nexport class TColumn {\r\n\r\n  render() {\r\n    return <div><slot/></div>;\r\n  }\r\n}\r\n","fieldset {\r\n  border: none;\r\n  padding: 0;\r\n}\r\n\r\nlegend {\r\n  display: contents;\r\n  font-weight: bold;\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-fieldset',\r\n  styleUrl: 't-fieldset.css',\r\n  shadow: true\r\n})\r\nexport class TFieldset {\r\n\r\n  @Prop() legend: string;\r\n\r\n  render() {\r\n    return <fieldset><legend>{this.legend}</legend><slot/></fieldset>;\r\n  }\r\n}\r\n","h1 {\r\n  margin-top: 0;\r\n  padding-top: 0;\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-heading',\r\n  styleUrl: 't-heading.css',\r\n  shadow: true,\r\n})\r\nexport class THeading {\r\n\r\n  @Prop() level: 1 | 2 | 3 | 4 | 5 | 6 = 1;\r\n\r\n  render() {\r\n    switch (this.level) {\r\n      case 1:\r\n        return <h1><slot/></h1>;\r\n      case 2:\r\n        return <h2><slot/></h2>;\r\n      case 3:\r\n        return <h3><slot/></h3>;\r\n      case 4:\r\n        return <h4><slot/></h4>;\r\n      case 5:\r\n        return <h5><slot/></h5>;\r\n      case 6:\r\n        return <h6><slot/></h6>;\r\n      default:\r\n        return <h1><slot/></h1>;\r\n    }\r\n  }\r\n}\r\n",":host {\r\n  --chroma: 0.4;\r\n  --lightness: 0.8;\r\n  --slider-background: linear-gradient(\r\n    to right,\r\n    oklch(var(--lightness) var(--chroma) 0),\r\n    oklch(var(--lightness) var(--chroma) 30),\r\n    oklch(var(--lightness) var(--chroma) 60),\r\n    oklch(var(--lightness) var(--chroma) 90),\r\n    oklch(var(--lightness) var(--chroma) 120),\r\n    oklch(var(--lightness) var(--chroma) 150),\r\n    oklch(var(--lightness) var(--chroma) 180),\r\n    oklch(var(--lightness) var(--chroma) 210),\r\n    oklch(var(--lightness) var(--chroma) 240),\r\n    oklch(var(--lightness) var(--chroma) 270),\r\n    oklch(var(--lightness) var(--chroma) 300),\r\n    oklch(var(--lightness) var(--chroma) 330),\r\n    oklch(var(--lightness) var(--chroma) 360)\r\n  );\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { TSliderCustomEvent } from '../../components';\r\n\r\n@Component({\r\n  tag: 't-hue-picker',\r\n  styleUrl: 't-hue-picker.css',\r\n  shadow: true\r\n})\r\nexport class THuePicker {\r\n\r\n  @Prop() label: string;\r\n  @Prop() value: number;\r\n\r\n  @Event() hueChange: EventEmitter<number>;\r\n\r\n  handleSliderChange = (event: TSliderCustomEvent<number>) =>\r\n    this.hueChange.emit(event.detail);\r\n\r\n  render() {\r\n    return <t-slider\r\n      label={this.label}\r\n      max={360}\r\n      min={0}\r\n      onSliderChange={this.handleSliderChange}\r\n      step={1}\r\n      value={this.value}\r\n    />;\r\n  }\r\n}\r\n","input::-webkit-inner-spin-button {\r\n  height: var(--height);\r\n  cursor: pointer;\r\n  margin-right: calc(-1 * var(--padding));\r\n  margin-left: var(--padding);\r\n}\r\n",".text-input {\r\n  --font-size: var(--t-default-font-size);\r\n  --height: 1.5rem;\r\n  --padding: calc((var(--height) - var(--t-default-font-size))/2);\r\n  background-color: var(--t-input-field-background-colour);\r\n  border-radius: 6px;\r\n  border: 1px solid var(--t-base-border-colour);\r\n  box-shadow: inset 1px 1px 1px rgba(0,0,0,0.3);\r\n  box-sizing: border-box;\r\n  color: var(--t-font-colour-default);\r\n  line-height: var(--font-size);\r\n  outline: none;\r\n  padding: var(--padding);\r\n  transition: var(--t-transition-duration-medium);\r\n}\r\n\r\n.text-input:focus {\r\n  transform: scale(1.05);\r\n  background-color: var(--t-page-background-colour);\r\n  box-shadow: color-mix(in oklab, var(--t-base-border-colour) 20%, transparent) 0 0 24px;\r\n}\r\n\r\n.text-input::selection {\r\n  background-color: var(--t-selection-background-colour);\r\n  color: var(--t-selection-font-colour);\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\n\r\n@Component({\r\n  tag: 't-integer-picker',\r\n  styleUrls: ['t-integer-picker.css', '../../style/text-input.css'],\r\n  shadow: true,\r\n})\r\nexport class TIntegerPicker {\r\n\r\n  @Prop() label: string;\r\n  @Prop() value: number;\r\n  @Prop() min: number;\r\n  @Prop() max: number;\r\n  @Prop() hue: ComponentHue;\r\n\r\n  @Event() integerChange: EventEmitter<number>;\r\n\r\n  private handleChange = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.integerChange.emit(target.valueAsNumber);\r\n  };\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <internal-input-wrapper>\r\n        <label htmlFor=\"input\" slot=\"label\">{this.label}</label>\r\n        <input\r\n          class=\"text-input\"\r\n          id=\"input\"\r\n          max={this.max}\r\n          min={this.min}\r\n          onChange={this.handleChange}\r\n          slot=\"input\"\r\n          type=\"number\"\r\n          value={this.value}\r\n        />\r\n      </internal-input-wrapper>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n","import { h } from '@stencil/core';\r\nimport { IconProps } from './IconProps';\r\nimport { SvgTemplate } from './SvgTemplate';\r\n\r\nexport const ChevronRightIcon = ({ fill, ...rest }: IconProps) => (\r\n  <SvgTemplate {...rest}>\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M9.47 5.97a.75.75 0 0 1 1.06 0l5.5 5.5a.75.75 0 0 1 0 1.06l-5.5 5.5a.75.75 0 1 1-1.06-1.06L14.44 12 9.47 7.03a.75.75 0 0 1 0-1.06Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </SvgTemplate>\r\n);\r\n",".main {\r\n  --border-radius: 12px;\r\n  border-radius: var(--border-radius);\r\n  box-shadow: var(--back-shadow);\r\n  color: var(--t-font-colour-default);\r\n  display: flex;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.main .leftbar {\r\n  --background-base: color-mix(in oklch, var(--t-page-background-colour) 95%, var(--t-full-contrast-colour));\r\n  --main-background: color-mix(in oklch, var(--background-base) 90%, var(--t-background-background-colour));\r\n  --top-shadow: inset color-mix(in oklab, var(--background-base) 90%, white) 0 1px 0;\r\n  --bottom-shadow: inset color-mix(in oklab, var(--background-base) 90%, black) 0 -1px 0;\r\n  /* --main-background, --top-shadow and --bottom-shadow are already defined at a higher level, but the change of --background-base does not change their values unless they are redefined here for some reason */\r\n  background-color: var(--main-background);\r\n  border-bottom-left-radius: var(--border-radius);\r\n  border-top-left-radius: var(--border-radius);\r\n  box-shadow: var(--top-shadow), var(--bottom-shadow);\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n\r\n  .leftbar-content {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .leftbar-toggle {\r\n    display: none;\r\n  }\r\n\r\n  &.sticky .leftbar-content {\r\n    max-height: 100vh;\r\n    overflow-y: auto;\r\n    position: sticky;\r\n    top: 0;\r\n  }\r\n}\r\n\r\n.main .content {\r\n  background-color: var(--main-background);\r\n  border-bottom-right-radius: var(--border-radius);\r\n  border-top-right-radius: var(--border-radius);\r\n  box-shadow: var(--top-shadow), var(--bottom-shadow);\r\n  flex-grow: 3;\r\n  padding: 1rem;\r\n}\r\n\r\n.leftbar:has(.leftbar-content:empty) {\r\n  display: none;\r\n}\r\n\r\n.leftbar:has(.leftbar-content:empty) + .content {\r\n  border-radius: var(--border-radius);\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .main {\r\n    --border-radius: 0;\r\n  }\r\n}\r\n\r\n@media (max-width: 800px) {\r\n\r\n  .main {\r\n    --closed-bar-width: var(--t-clickable-area-size);\r\n    position: relative;\r\n\r\n    .leftbar {\r\n      display: flex;\r\n      flex-direction: row;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      height: 100%;\r\n      z-index: 100;\r\n      background-color: transparent;\r\n\r\n      .leftbar-toggle {\r\n        backdrop-filter: var(--t-popover-backdrop-filter);\r\n        background-color: color-mix(in oklch, var(--t-base-colour) calc(var(--t-popover-alpha) * 100%), transparent);\r\n        border: 0;\r\n        color: var(--t-font-colour-default);\r\n        display: block;\r\n        height: 100%;\r\n        max-height: 100vh;\r\n        position: sticky;\r\n        top: 0;\r\n        width: var(--closed-bar-width);\r\n\r\n        &:hover {\r\n          background-color: var(--t-base-colour);\r\n        }\r\n\r\n        .chevron {\r\n          transform: scale(1.5) rotate(0deg);\r\n        }\r\n      }\r\n\r\n      .leftbar-content {\r\n        backdrop-filter: var(--t-popover-backdrop-filter);\r\n        background-color: var(--t-popover-background-colour-base);\r\n        overflow: hidden;\r\n        transition-duration: var(--t-transition-duration-medium);\r\n        transition-property: width, padding;\r\n        width: 200px;\r\n      }\r\n    }\r\n\r\n    .content {\r\n      padding-left: calc(1rem + var(--closed-bar-width));\r\n    }\r\n  }\r\n\r\n  .main.leftbar-closed {\r\n    .leftbar {\r\n      position: absolute;\r\n      height: 100%;\r\n      width: fit-content;\r\n\r\n      .leftbar-content {\r\n        width: 0;\r\n        padding: 1rem 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .main.leftbar-open {\r\n    .leftbar {\r\n      .leftbar-content {\r\n        width: 200px;\r\n      }\r\n\r\n      .leftbar-toggle {\r\n        box-shadow: #0002 6px 0 12px;\r\n\r\n        .chevron {\r\n          transform: scale(1.5) rotate(180deg);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Prop, State } from '@stencil/core';\r\nimport { ChevronRightIcon } from '../../icons/ChevronRightIcon';\r\n\r\n@Component({\r\n  tag: 't-layout-main',\r\n  styleUrl: 't-layout-main.css',\r\n})\r\nexport class TLayoutMain {\r\n\r\n  @State() leftbarOpen = false;\r\n\r\n  @Prop() stickyLeftbar: boolean = false;\r\n\r\n  toggleLeftbar() {\r\n    this.leftbarOpen = !this.leftbarOpen;\r\n  }\r\n\r\n  render() {\r\n    const stateClass = this.leftbarOpen ? 'leftbar-open' : 'leftbar-closed';\r\n\r\n    return <internal-style-provider>\r\n      <main class={`main ${stateClass}`}>\r\n        <div class={`leftbar${this.stickyLeftbar ? ' sticky' : ''}`}>\r\n          <div class=\"leftbar-content\">\r\n            <slot name=\"leftbar\" />\r\n          </div>\r\n          <button\r\n            class=\"leftbar-toggle\"\r\n            onClick={() => this.toggleLeftbar()}\r\n            title={this.leftbarOpen ? 'Lukk sidepanel' : 'Åpne sidepanel'}\r\n          >\r\n            <ChevronRightIcon class='chevron'/>\r\n          </button>\r\n        </div>\r\n        <div class=\"content\">\r\n          <slot name='content' />\r\n        </div>\r\n      </main>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n","import { h } from '@stencil/core';\r\nimport { SvgTemplate } from './SvgTemplate';\r\nimport { IconProps } from './IconProps';\r\n\r\nconst dFilled = 'm18.19 4.75-8.72 8.72a.75.75 0 1 0 1.06 1.06l8.72-8.72v5.69a.75.75 0 0 0 1.5 0V4a.747.747 0 0 0-.75-.75h-7.5a.75.75 0 0 0 0 1.5h5.69ZM8.408 15.591a2.25 2.25 0 0 0 3.182 0l4.305-4.305a.5.5 0 0 1 .854.353V19A1.75 1.75 0 0 1 15 20.75H5A1.75 1.75 0 0 1 3.25 19V9c0-.966.784-1.75 1.75-1.75h7.361a.5.5 0 0 1 .354.854l-4.306 4.305a2.25 2.25 0 0 0 0 3.182Z';\r\nconst dUnfilled = `\r\n    M 20.532 3.471\r\n    A .748 .748 0 0 1 20.75 4\r\n    v 7.5\r\n    a .75 .75 0 0 1 -1.5 0\r\n    V 5.81\r\n    l -8.72 8.72\r\n    a .75.75 0 1 1 -1.06 -1.06\r\n    l 8.72 -8.72\r\n    H 12.5\r\n    a .75 .75 0 0 1 0 -1.5\r\n    H 20\r\n    c .206 0 .393 .083 .529 .218\r\n    l .001 .002 .002 .001\r\n    Z\r\n    M 4.75 9\r\n    A .25 .25 0 0 1 5 8.75\r\n    h 7\r\n    a .75 .75 0 0 0 0 -1.5\r\n    H 5\r\n    A 1.75 1.75 0 0 0 3.25 9\r\n    v 10\r\n    c 0 .966 .784 1.75 1.75 1.75\r\n    h 10\r\n    A 1.75 1.75 0 0 0 16.75 19\r\n    v -7\r\n    a .75 .75 0 0 0 -1.5 0\r\n    v 7\r\n    a .25 .25 0 0 1 -.25 .25\r\n    H 5\r\n    a .25 .25 0 0 1 -.25 -.25\r\n    V 9\r\n    Z\r\n`; //'M20.532 3.471A.748.748 0 0 1 20.75 4v7.5a.75.75 0 0 1-1.5 0V5.81l-8.72 8.72a.75.75 0 1 1-1.06-1.06l8.72-8.72H12.5a.75.75 0 0 1 0-1.5H20c.206 0 .393.083.529.218l.001.002.002.001ZM4.75 9A.25.25 0 0 1 5 8.75h7a.75.75 0 0 0 0-1.5H5A1.75 1.75 0 0 0 3.25 9v10c0 .966.784 1.75 1.75 1.75h10A1.75 1.75 0 0 0 16.75 19v-7a.75.75 0 0 0-1.5 0v7a.25.25 0 0 1-.25.25H5a.25.25 0 0 1-.25-.25V9Z';\r\n\r\nexport const ExternalLinkIcon = ({fill, ...rest}: IconProps) => (\r\n  <SvgTemplate {...rest}>\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        clip-rule=\"evenodd\"\r\n        d={fill ? dFilled : dUnfilled}\r\n        fill=\"currentColor\"\r\n      />\r\n  </SvgTemplate>\r\n)\r\n",".link:link {\r\n  color: var(--t-link-colour);\r\n}\r\n\r\n.link:visited {\r\n  color: var(--t-link-visited-colour);\r\n}\r\n\r\n.link:hover {\r\n  text-decoration: none;\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\nimport { ExternalLinkIcon } from '../../icons/ExternalLinkIcon';\r\n\r\n@Component({\r\n  tag: 't-link',\r\n  styleUrl: 't-link.css',\r\n  shadow: true,\r\n})\r\nexport class TLink {\r\n\r\n  @Prop() href: string;\r\n  @Prop() target?: string;\r\n  @Prop() external?: boolean;\r\n\r\n  render() {\r\n    return <internal-style-provider>\r\n      <a class='link' href={this.href} target={this.target}>\r\n        <slot/>\r\n        {this.external && <ExternalLinkIcon/>}\r\n      </a>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n","div {\r\n  display: flex;\r\n  gap: var(--t-spacing-default);\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n","import { Component, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-row',\r\n  styleUrl: 't-row.css',\r\n  shadow: true\r\n})\r\nexport class TRow {\r\n\r\n  render() {\r\n    return <div><slot/></div>;\r\n  }\r\n}\r\n",":host {\r\n  --slider-background: linear-gradient(\r\n    to right,\r\n    oklch(0.8 0 var(--t-base-colour-hue)),\r\n    oklch(0.8 0.4 var(--t-base-colour-hue))\r\n  );\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { TSliderCustomEvent } from '../../components';\r\n\r\n@Component({\r\n  tag: 't-saturation-picker',\r\n  styleUrl: 't-saturation-picker.css',\r\n  shadow: true,\r\n})\r\nexport class TSaturationPicker {\r\n\r\n  @Prop() label: string;\r\n  @Prop() value: number;\r\n\r\n  @Event() saturationChange: EventEmitter<number>;\r\n\r\n  handleSliderChange = (event: TSliderCustomEvent<number>) =>\r\n    this.saturationChange.emit(event.detail);\r\n\r\n  render() {\r\n    return <t-slider\r\n      label={this.label}\r\n      max={0.3}\r\n      min={0}\r\n      onSliderChange={this.handleSliderChange}\r\n      step={0.01}\r\n      value={this.value}\r\n    />;\r\n  }\r\n}\r\n",".text-input {\r\n  --font-size: var(--t-default-font-size);\r\n  --height: 1.5rem;\r\n  --padding: calc((var(--height) - var(--t-default-font-size))/2);\r\n  background-color: var(--t-input-field-background-colour);\r\n  border-radius: 6px;\r\n  border: 1px solid var(--t-base-border-colour);\r\n  box-shadow: inset 1px 1px 1px rgba(0,0,0,0.3);\r\n  box-sizing: border-box;\r\n  color: var(--t-font-colour-default);\r\n  line-height: var(--font-size);\r\n  outline: none;\r\n  padding: var(--padding);\r\n  transition: var(--t-transition-duration-medium);\r\n}\r\n\r\n.text-input:focus {\r\n  transform: scale(1.05);\r\n  background-color: var(--t-page-background-colour);\r\n  box-shadow: color-mix(in oklab, var(--t-base-border-colour) 20%, transparent) 0 0 24px;\r\n}\r\n\r\n.text-input::selection {\r\n  background-color: var(--t-selection-background-colour);\r\n  color: var(--t-selection-font-colour);\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\nimport { TSelectOption } from './TSelectOption';\r\nimport { LabelPlacement } from '../../types/LabelPlacement';\r\n\r\n@Component({\r\n  tag: 't-select',\r\n  styleUrls: ['../../style/text-input.css'],\r\n  shadow: true,\r\n})\r\nexport class TSelect {\r\n\r\n  @Prop() hue: ComponentHue = 0;\r\n  @Prop() label: string;\r\n  @Prop() options: TSelectOption[];\r\n  @Prop() value: string;\r\n  @Prop() labelPlacement: LabelPlacement = 'top';\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <internal-input-wrapper labelPlacement={this.labelPlacement}>\r\n        <label htmlFor=\"input\" slot=\"label\">{this.label}</label>\r\n        <select\r\n          slot=\"input\"\r\n          id=\"input\"\r\n          class=\"text-input\"\r\n        >\r\n          {this.options.map(option => (\r\n            <option\r\n              value={option.value}\r\n              selected={option.value === this.value}\r\n            >\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </internal-input-wrapper>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n",".t-spinner {\r\n  --size: 2rem;\r\n  animation: spin 1s linear infinite;\r\n  background-color: transparent;\r\n  border-color: var(--t-small-contrast-colour);\r\n  border-radius: 50%;\r\n  border-style: solid;\r\n  border-top-color: var(--t-base-fill-colour);\r\n  border-width: 4px;\r\n  box-sizing: border-box;\r\n  display: inline-block;\r\n  height: var(--size);\r\n  position: relative;\r\n  width: var(--size);\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(1turn);\r\n  }\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\nimport { ButtonAttributes } from '../../types/HTMLAttributes';\r\n\r\n@Component({\r\n  tag: 't-spinner',\r\n  styleUrl: 't-spinner.css',\r\n  shadow: true,\r\n})\r\nexport class TSpinner {\r\n\r\n  @Prop() title: string = 'Laster';\r\n\r\n  render() {\r\n    return <span class='t-spinner' title={this.title}/>;\r\n  }\r\n}\r\n",".wrapper {\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  gap: var(--t-spacing-inline);\r\n  align-items: center;\r\n}\r\n\r\n.switch {\r\n  --height: 1.5rem;\r\n  --padding: 1px;\r\n  --width: calc(var(--height) * 2);\r\n  --hover-translate: 4px;\r\n  --border-width: 1px;\r\n  position: relative;\r\n  display: inline-block;\r\n  height: var(--height);\r\n  width: var(--width);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.slider {\r\n  --top-mix-colour: black;\r\n  --bottom-mix-colour: white;\r\n  --chroma: 0;\r\n  --fill-colour: var(--t-input-field-background-colour);\r\n  background: linear-gradient(\r\n    to bottom,\r\n    color-mix(in oklab, var(--fill-colour) 90%, var(--top-mix-colour)),\r\n    var(--fill-colour),\r\n    color-mix(in oklab, var(--fill-colour) 90%, var(--bottom-mix-colour))\r\n  );\r\n  border-radius: 100px;\r\n  border:\r\n    var(--border-width)\r\n    solid\r\n    var(--t-base-border-colour);\r\n  bottom: 0;\r\n  box-shadow: #0004 0 1px 2px 1px inset;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  height: var(--height);\r\n  left: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  transition: var(--t-transition-duration-long);\r\n  width: var(--width);\r\n}\r\n\r\n.slider:before {\r\n  aspect-ratio: 1;\r\n  background-color: var(--t-base-fill-colour);\r\n  border-radius: 50%;\r\n  top: var(--padding);\r\n  content: \"\";\r\n\r\n  height: calc(var(--height) - var(--padding) * 2 - var(--border-width) * 2);\r\n  left: var(--padding);\r\n  position: absolute;\r\n  transition: var(--t-transition-duration-short);\r\n}\r\n\r\ninput:checked + .slider {\r\n  --chroma: 0.4;\r\n  --top-mix-colour: white;\r\n  --bottom-mix-colour: black;\r\n  --fill-colour: var(--t-base-fill-colour);\r\n  box-shadow: none;\r\n}\r\n\r\ninput:checked + .slider:before {\r\n  transform: translateX(calc(var(--width) - var(--height)));\r\n  background-color: var(--t-page-background-colour);\r\n}\r\n\r\n.switch:has(:focus-visible) .slider {\r\n  outline: #000 auto 2px;\r\n}\r\n\r\n.wrapper:hover .slider:before {\r\n  transform: translateX(var(--hover-translate));\r\n}\r\n\r\n.wrapper:hover input:checked + .slider:before {\r\n  transform: translateX(calc(var(--width) - var(--height) - var(--hover-translate)));\r\n}\r\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-switch',\r\n  styleUrl: 't-switch.css',\r\n  shadow: true,\r\n})\r\nexport class TSwitch {\r\n\r\n  @Event() switch: EventEmitter<boolean>;\r\n\r\n  @Prop() checked: boolean = false;\r\n  @Prop() hue: number = 0;\r\n\r\n  handleChange = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.switch.emit(target.checked);\r\n  };\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <label htmlFor=\"input\" class=\"wrapper\">\r\n      <span class=\"switch\">\r\n        <input id=\"input\" type=\"checkbox\" onChange={this.handleChange} checked={this.checked} />\r\n        <span class=\"slider\" />\r\n      </span>\r\n        <span class=\"label\"><slot /></span>\r\n      </label>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n",null,".text-input {\r\n  --font-size: var(--t-default-font-size);\r\n  --height: 1.5rem;\r\n  --padding: calc((var(--height) - var(--t-default-font-size))/2);\r\n  background-color: var(--t-input-field-background-colour);\r\n  border-radius: 6px;\r\n  border: 1px solid var(--t-base-border-colour);\r\n  box-shadow: inset 1px 1px 1px rgba(0,0,0,0.3);\r\n  box-sizing: border-box;\r\n  color: var(--t-font-colour-default);\r\n  line-height: var(--font-size);\r\n  outline: none;\r\n  padding: var(--padding);\r\n  transition: var(--t-transition-duration-medium);\r\n}\r\n\r\n.text-input:focus {\r\n  transform: scale(1.05);\r\n  background-color: var(--t-page-background-colour);\r\n  box-shadow: color-mix(in oklab, var(--t-base-border-colour) 20%, transparent) 0 0 24px;\r\n}\r\n\r\n.text-input::selection {\r\n  background-color: var(--t-selection-background-colour);\r\n  color: var(--t-selection-font-colour);\r\n}\r\n","import { Component, EventEmitter, h, Prop, Event } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\n\r\n@Component({\r\n  tag: 't-textfield',\r\n  styleUrls: ['t-textfield.css', '../../style/text-input.css'],\r\n  shadow: true,\r\n})\r\nexport class TTextfield {\r\n\r\n  @Prop() hue: ComponentHue = 0;\r\n  @Prop() label: string;\r\n  @Prop() value: string;\r\n\r\n  @Event() valueChange: EventEmitter<string>;\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <internal-input-wrapper>\r\n        <label htmlFor=\"input\" slot='label'>{this.label}</label>\r\n        <input\r\n          slot='input'\r\n          id=\"input\"\r\n          class=\"text-input\"\r\n          type=\"text\"\r\n          value={this.value}\r\n          onInput={(e) => {\r\n            this.valueChange.emit((e.target as HTMLInputElement).value);\r\n          }}\r\n        />\r\n      </internal-input-wrapper>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n"],"mappings":"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"}