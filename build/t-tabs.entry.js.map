{"file":"t-tabs.entry.esm.js","mappings":";;AAAA,MAAM,QAAQ,GAAG,m3DAAm3D;;MCOv3D,KAAK;;;QAOR,YAAO,GAAsB,EAAE,CAAC;6BALP,CAAC;8BACA,CAAC;;IAMnC,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;KACnE;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;KACtD;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;KAC5B;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;KAC1B;IAED,aAAa;QACX,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;SACzC;KACF;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;SACzC;KACF;IAED,aAAa,CAAC,KAAoB;QAChC,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;QACtB,QAAQ,GAAG;YACT,KAAK,WAAW;gBACd,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,MAAM;YACR,KAAK,YAAY;gBACf,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;SACT;KACF;IAED,kBAAkB;QAChB,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;QAChF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK;YAC9B,SAAS,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SACnC,CAAC,CAAC;KACJ;IAED,MAAM;QACJ,QACE,4DAAK,KAAK,EAAC,QAAQ,IACjB,4DAAK,IAAI,EAAC,SAAS,IAChB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,MAC3B,+BACiB,KAAK,CAAC,QAAQ,EAAE,mBAChB,IAAI,CAAC,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,OAAO,EAC9D,GAAG,EAAE,MAAM,GAAC,GAAG,CAAC,OAAO,EACvB,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACpC,SAAS,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAC/C,IAAI,EAAC,KAAK,EACV,QAAQ,EAAE,IAAI,CAAC,cAAc,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAE/C,GAAG,CAAC,OAAO,CACL,CACV,CAAC,CACE,EACL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,MAC3B,eACE,KAAK,EAAE,IAAI,CAAC,aAAa,KAAK,KAAK,GAAG,QAAQ,GAAG,UAAU,EAC3D,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EACpB,GAAG,EAAE,QAAQ,GAAC,GAAG,CAAC,OAAO,EACzB,IAAI,EAAC,UAAU,GACf,CACH,CAAC,CACE,EACN;KACH;;;;;;;","names":[],"sources":["src/components/t-tabs/t-tabs.css?tag=t-tabs&encapsulation=shadow","src/components/t-tabs/t-tabs.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.t-tabs {\n  --top-shadow-inset: color-mix(in oklab, transparent 75%, white) inset 0 1px;\n  --top-shadow-outset: color-mix(in oklab, black 25%, transparent) 0 -1px 2px;\n  --bottom-shadow-inset: color-mix(in oklab, transparent 75%, black) inset 0 -1px;\n  --bottom-shadow-outset: color-mix(in oklab, white 30%, transparent) 0 1px 2px;\n  --top-shadow: var(--top-shadow-inset), var(--top-shadow-outset);\n  --bottom-shadow: var(--bottom-shadow-inset), var(--bottom-shadow-outset);\n  --selected-colour: var(--t-base-colour);\n\n  [role='tablist'] {\n    height: var(--t-clickable-area-size);\n\n    [role='tab'] {\n      margin-left: var(--t-border-radius-default);\n      background: linear-gradient(\n        to bottom,\n        color-mix(in oklab, var(--selected-colour) 80%, white),\n        var(--selected-colour)\n      );\n      border: none;\n      border-top-left-radius: var(--t-border-radius-default);\n      border-top-right-radius: var(--t-border-radius-default);\n      box-shadow: var(--top-shadow);\n      box-sizing: border-box;\n      color: var(--t-font-colour-default);\n      cursor: pointer;\n      font-size: var(--t-default-font-size);\n      padding: .5rem;\n      height: calc(100% + 2px);\n\n      &[aria-selected='true'] {\n        position: relative;\n        z-index: 2;\n      }\n\n      &[aria-selected='false']:not(:hover) {\n        background: var(--t-small-contrast-colour);\n        color: color-mix(in oklab, var(--t-font-colour-default) 60%, var(--t-page-background-colour));\n      }\n    }\n  }\n\n  [role='tabpanel'] {\n    background: linear-gradient(\n      to bottom,\n      var(--selected-colour),\n      var(--selected-colour) 3px,\n      var(--t-panel-background-colour) 4px,\n      var(--t-panel-background-colour)\n    );\n    position: relative;\n    z-index: 1;\n\n    &.inactive {\n      display: none;\n    }\n  }\n}\n","import { Component, h, Element, State } from '@stencil/core';\n\n@Component({\n  tag: 't-tabs',\n  styleUrl: 't-tabs.css',\n  shadow: true,\n})\nexport class TTabs {\n\n  @State() selectedIndex: number = 0;\n  @State() focusableIndex: number = 0;\n\n  @Element() element: HTMLElement;\n\n  private tabList: HTMLTTabElement[] = [];\n\n  connectedCallback() {\n    this.tabList = Array.from(this.element.querySelectorAll('t-tab'));\n  }\n\n  get tabs(): NodeListOf<HTMLTTabElement> {\n    return this.element.querySelectorAll('[role=\"tab\"]');\n  }\n\n  selectTab(index: number) {\n    this.selectedIndex = index;\n  }\n\n  moveFocus(index: number) {\n    this.focusableIndex = index;\n    this.tabs[index].focus();\n  }\n\n  moveFocusLeft() {\n    if (this.focusableIndex > 0) {\n      this.moveFocus(this.focusableIndex - 1);\n    }\n  }\n\n  moveFocusRight() {\n    if (this.focusableIndex < this.tabs.length - 1) {\n      this.moveFocus(this.focusableIndex + 1);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const { key } = event;\n    switch (key) {\n      case 'ArrowLeft':\n        event.preventDefault();\n        this.moveFocusLeft();\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        this.moveFocusRight();\n        break;\n    }\n  }\n\n  componentDidRender() {\n    const tabPanels = this.element.shadowRoot.querySelectorAll('[role=\"tabpanel\"]');\n    this.tabList.forEach((tab, index) => {\n      tabPanels[index].appendChild(tab);\n    });\n  }\n\n  render() {\n    return (\n      <div class='t-tabs'>\n        <div role='tablist'>\n          {this.tabList.map((tab, index) => (\n            <button\n              aria-controls={index.toString()}\n              aria-selected={this.selectedIndex === index ? 'true' : 'false'}\n              key={'tab_'+tab.heading}\n              onClick={() => this.selectTab(index)}\n              onKeyDown={(event) => this.handleKeyDown(event)}\n              role='tab'\n              tabindex={this.focusableIndex === index ? 0 : -1}\n            >\n              {tab.heading}\n            </button>\n          ))}\n        </div>\n        {this.tabList.map((tab, index) => (\n          <t-panel\n            class={this.selectedIndex === index ? 'active' : 'inactive'}\n            id={index.toString()}\n            key={'panel_'+tab.heading}\n            role='tabpanel'\n          />\n        ))}\n      </div>\n    );\n  }\n}\n"],"version":3}