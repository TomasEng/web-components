{"file":"t-layout-main.entry.esm.js","mappings":";;;;;;;;;;;;;;AAIO,MAAM,gBAAgB,GAAG,CAAC,EAA4B;QAA5B,EAAE,IAAI,OAAsB,EAAjB,IAAI,cAAf,QAAiB,CAAF;IAAkB,QAChE,EAAC,WAAW,oBAAK,IAAI;QACnB,yBACY,SAAS,eACT,SAAS,EACnB,CAAC,EAAC,oIAAoI,EACtI,IAAI,EAAC,cAAc,GACnB,CACU,EACf;CAAA;;ACbD,MAAM,cAAc,GAAG,42HAA42H;;MCOt3H,WAAW;;;2BAEC,KAAK;6BAEK,KAAK;;IAEtC,aAAa;QACX,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;KACtC;IAED,MAAM;QACJ,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,cAAc,GAAG,gBAAgB,CAAC;QAExE,OAAO,kFACL,6DAAM,KAAK,EAAE,QAAQ,UAAU,EAAE,IAC/B,4DAAK,KAAK,EAAE,UAAU,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,EAAE,EAAE,IACzD,4DAAK,KAAK,EAAC,iBAAiB,IAC1B,6DAAM,IAAI,EAAC,SAAS,GAAG,CACnB,EACN,+DACE,KAAK,EAAC,gBAAgB,EACtB,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE,EACnC,KAAK,EAAE,IAAI,CAAC,WAAW,GAAG,gBAAgB,GAAG,gBAAgB,IAE7D,EAAC,gBAAgB,qDAAC,KAAK,EAAC,SAAS,GAAE,CAC5B,CACL,EACN,4DAAK,KAAK,EAAC,SAAS,IAClB,6DAAM,IAAI,EAAC,SAAS,GAAG,CACnB,CACD,CACiB,CAAC;KAC5B;;;;;;","names":[],"sources":["src/icons/ChevronRightIcon.tsx","src/components/t-layout-main/t-layout-main.css?tag=t-layout-main","src/components/t-layout-main/t-layout-main.tsx"],"sourcesContent":["import { h } from '@stencil/core';\r\nimport { IconProps } from './IconProps';\r\nimport { SvgTemplate } from './SvgTemplate';\r\n\r\nexport const ChevronRightIcon = ({ fill, ...rest }: IconProps) => (\r\n  <SvgTemplate {...rest}>\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M9.47 5.97a.75.75 0 0 1 1.06 0l5.5 5.5a.75.75 0 0 1 0 1.06l-5.5 5.5a.75.75 0 1 1-1.06-1.06L14.44 12 9.47 7.03a.75.75 0 0 1 0-1.06Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </SvgTemplate>\r\n);\r\n",".main {\r\n  --border-radius: 12px;\r\n  border-radius: var(--border-radius);\r\n  box-shadow: var(--back-shadow);\r\n  color: var(--t-font-colour-default);\r\n  display: flex;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.main .leftbar {\r\n  --background-base: color-mix(in oklch, var(--t-page-background-colour) 95%, var(--t-full-contrast-colour));\r\n  --main-background: color-mix(in oklch, var(--background-base) 90%, var(--t-background-background-colour));\r\n  --top-shadow: inset color-mix(in oklab, var(--background-base) 90%, white) 0 1px 0;\r\n  --bottom-shadow: inset color-mix(in oklab, var(--background-base) 90%, black) 0 -1px 0;\r\n  /* --main-background, --top-shadow and --bottom-shadow are already defined at a higher level, but the change of --background-base does not change their values unless they are redefined here for some reason */\r\n  background-color: var(--main-background);\r\n  border-bottom-left-radius: var(--border-radius);\r\n  border-top-left-radius: var(--border-radius);\r\n  box-shadow: var(--top-shadow), var(--bottom-shadow);\r\n  box-sizing: border-box;\r\n  width: 20%;\r\n\r\n  .leftbar-content {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .leftbar-toggle {\r\n    display: none;\r\n  }\r\n\r\n  &.sticky .leftbar-content {\r\n    max-height: 100vh;\r\n    overflow-y: auto;\r\n    position: sticky;\r\n    top: 0;\r\n  }\r\n}\r\n\r\n.main .content {\r\n  background-color: var(--main-background);\r\n  border-bottom-right-radius: var(--border-radius);\r\n  border-top-right-radius: var(--border-radius);\r\n  box-shadow: var(--top-shadow), var(--bottom-shadow);\r\n  flex: 1;\r\n  min-width: 0;\r\n  padding: 1rem;\r\n}\r\n\r\n.leftbar:has(.leftbar-content:empty) {\r\n  display: none;\r\n}\r\n\r\n.leftbar:has(.leftbar-content:empty) + .content {\r\n  border-radius: var(--border-radius);\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .main {\r\n    --border-radius: 0;\r\n  }\r\n}\r\n\r\n@media (max-width: 800px) {\r\n\r\n  .main {\r\n    --closed-bar-width: var(--t-clickable-area-size);\r\n    position: relative;\r\n\r\n    .leftbar {\r\n      display: flex;\r\n      flex-direction: row;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      height: 100%;\r\n      z-index: 100;\r\n      background-color: transparent;\r\n\r\n      .leftbar-toggle {\r\n        backdrop-filter: var(--t-popover-backdrop-filter);\r\n        background-color: color-mix(in oklch, var(--t-base-colour) calc(var(--t-popover-alpha) * 100%), transparent);\r\n        border: 0;\r\n        color: var(--t-font-colour-default);\r\n        display: block;\r\n        height: 100%;\r\n        max-height: 100vh;\r\n        position: sticky;\r\n        top: 0;\r\n        width: var(--closed-bar-width);\r\n\r\n        &:hover {\r\n          background-color: var(--t-base-colour);\r\n        }\r\n\r\n        .chevron {\r\n          transform: scale(1.5) rotate(0deg);\r\n        }\r\n      }\r\n\r\n      .leftbar-content {\r\n        backdrop-filter: var(--t-popover-backdrop-filter);\r\n        background-color: var(--t-popover-background-colour-base);\r\n        overflow: hidden;\r\n        transition-duration: var(--t-transition-duration-medium);\r\n        transition-property: width, padding;\r\n        width: 200px;\r\n      }\r\n    }\r\n\r\n    .content {\r\n      padding-left: calc(1rem + var(--closed-bar-width));\r\n    }\r\n  }\r\n\r\n  .main.leftbar-closed {\r\n    .leftbar {\r\n      position: absolute;\r\n      height: 100%;\r\n      width: fit-content;\r\n\r\n      .leftbar-content {\r\n        width: 0;\r\n        padding: 1rem 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .main.leftbar-open {\r\n    .leftbar {\r\n      .leftbar-content {\r\n        width: 200px;\r\n      }\r\n\r\n      .leftbar-toggle {\r\n        box-shadow: #0002 6px 0 12px;\r\n\r\n        .chevron {\r\n          transform: scale(1.5) rotate(180deg);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Prop, State } from '@stencil/core';\r\nimport { ChevronRightIcon } from '../../icons/ChevronRightIcon';\r\n\r\n@Component({\r\n  tag: 't-layout-main',\r\n  styleUrl: 't-layout-main.css',\r\n})\r\nexport class TLayoutMain {\r\n\r\n  @State() leftbarOpen = false;\r\n\r\n  @Prop() stickyLeftbar: boolean = false;\r\n\r\n  toggleLeftbar() {\r\n    this.leftbarOpen = !this.leftbarOpen;\r\n  }\r\n\r\n  render() {\r\n    const stateClass = this.leftbarOpen ? 'leftbar-open' : 'leftbar-closed';\r\n\r\n    return <internal-style-provider>\r\n      <main class={`main ${stateClass}`}>\r\n        <div class={`leftbar${this.stickyLeftbar ? ' sticky' : ''}`}>\r\n          <div class=\"leftbar-content\">\r\n            <slot name=\"leftbar\" />\r\n          </div>\r\n          <button\r\n            class=\"leftbar-toggle\"\r\n            onClick={() => this.toggleLeftbar()}\r\n            title={this.leftbarOpen ? 'Lukk sidepanel' : 'Ã…pne sidepanel'}\r\n          >\r\n            <ChevronRightIcon class='chevron'/>\r\n          </button>\r\n        </div>\r\n        <div class=\"content\">\r\n          <slot name='content' />\r\n        </div>\r\n      </main>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n"],"version":3}