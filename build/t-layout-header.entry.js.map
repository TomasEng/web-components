{"file":"t-layout-header.entry.esm.js","mappings":";;;;;;;;;;;;;;AAIO,MAAM,cAAc,GAAmC,CAAC,EAAiB;QAAjB,EAAE,IAAI,OAAW,EAAN,IAAI,gBAAf,QAAiB,CAAF;IAAO,QACnF,EAAC,WAAW,oBAAK,IAAI;QACnB,yBACY,SAAS,eACT,SAAS,EACnB,CAAC,EAAC,6MAA6M,EAC/M,IAAI,EAAC,cAAc,GACnB,CACU,EACf;CAAA;;;;;;;;;;;;;ACTM,MAAM,SAAS,GAAG,CAAC,EAA4B;QAA5B,EAAE,IAAI,OAAsB,EAAjB,IAAI,cAAf,QAAiB,CAAF;IAAkB,QACzD,EAAC,WAAW,oBAAK,IAAI;QACnB,YACE,CAAC,EAAC,sLAAsL,EACxL,IAAI,EAAC,cAAc,GACnB,CACU,EACf;CAAA;;ACXD,MAAM,gBAAgB,GAAG,mpJAAmpJ;;MCS/pJ,aAAa;;;;wBAKW,EAAE;uBAET,KAAK;;IAEjC,SAAS;QACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;IAED,WAAW;QACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IAED,MAAM;QACJ,OAAO,+DAAQ,KAAK,EAAE,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,YAAY,IAC5D,4DAAK,KAAK,EAAC,OAAO,IAAE,IAAI,CAAC,SAAS,CAAO,EACzC,4DAAK,KAAK,EAAC,qBAAqB,IAC9B,4DAAK,KAAK,EAAC,2BAA2B,IACpC,EAAC,MAAM,qDAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,GAAI,EAChC,4DAAK,KAAK,EAAC,SAAS,IAClB,wEAAiB,KAAK,EAAC,YAAY,GAAE,CACjC,CACF,CACF,EACN,4DAAK,KAAK,EAAC,YAAY,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,IACzF,iEAAU,gBAAgB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,EAAE,IAClE,IAAI,CAAC,OAAO,GAAG,EAAC,SAAS,OAAG,GAAG,EAAC,cAAc,OAAG,CACzC,CACP,CACC,CAAC;KACX;;;AAOH,MAAM,MAAM,GAAG,CAAC,EAAE,KAAK,EAAe;IACpC,QACE,WAAK,KAAK,EAAC,KAAK,IACd,cACG,KAAK,CAAC,GAAG,CAAC,IAAI,KACb,UAAI,KAAK,EAAE,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,IAChD,SAAG,IAAI,EAAE,IAAI,CAAC,IAAI,IAChB,gBAAO,IAAI,CAAC,KAAK,CAAQ,CACvB,CACD,CACN,CAAC,CACC,CACD,EACN;AACJ,CAAC,CAAC;;;;;","names":[],"sources":["src/icons/MenuToggleIcon.tsx","src/icons/CrossIcon.tsx","src/components/t-layout-header/t-layout-header.css?tag=t-layout-header","src/components/t-layout-header/t-layout-header.tsx"],"sourcesContent":["import { FunctionalComponent, h } from '@stencil/core';\r\nimport { SvgTemplate } from './SvgTemplate';\r\nimport { IconProps } from './IconProps';\r\n\r\nexport const MenuToggleIcon: FunctionalComponent<IconProps> = ({ fill, ...rest }) => (\r\n  <SvgTemplate {...rest}>\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M2.75 6a.75.75 0 0 1 .75-.75h17a.75.75 0 0 1 0 1.5h-17A.75.75 0 0 1 2.75 6Zm0 6a.75.75 0 0 1 .75-.75h17a.75.75 0 0 1 0 1.5h-17a.75.75 0 0 1-.75-.75Zm.75 5.25a.75.75 0 0 0 0 1.5h17a.75.75 0 0 0 0-1.5h-17Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </SvgTemplate>\r\n);\r\n","import { h } from '@stencil/core';\r\nimport { IconProps } from './IconProps';\r\nimport { SvgTemplate } from './SvgTemplate';\r\n\r\nexport const CrossIcon = ({ fill, ...rest }: IconProps) => (\r\n  <SvgTemplate {...rest}>\r\n    <path\r\n      d=\"M6.53 5.47a.75.75 0 0 0-1.06 1.06L10.94 12l-5.47 5.47a.75.75 0 1 0 1.06 1.06L12 13.06l5.47 5.47a.75.75 0 1 0 1.06-1.06L13.06 12l5.47-5.47a.75.75 0 0 0-1.06-1.06L12 10.94 6.53 5.47Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </SvgTemplate>\r\n);\r\n","header {\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  grid-template-areas: \"title hcontent\";\r\n  align-items: stretch;\r\n  box-sizing: border-box;\r\n  gap: 0 1rem;\r\n\r\n  .title {\r\n    grid-area: title;\r\n    font-size: 1.5rem;\r\n    padding: 1rem 0;\r\n  }\r\n\r\n  .collapsible-content {\r\n    grid-area: hcontent;\r\n    flex: 1;\r\n  }\r\n\r\n  .collapsible-content-inner {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    box-sizing: border-box;\r\n\r\n    .nav {\r\n      align-self: stretch;\r\n\r\n      ul {\r\n        display: flex;\r\n        flex-direction: row;\r\n        list-style: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        height: 100%;\r\n        gap: 4px;\r\n\r\n        li {\r\n          height: 100%;\r\n\r\n          a {\r\n            align-items: center;\r\n            background-color: var(--main-background);\r\n            border-top-left-radius: var(--t-navbar-item-border-radius);\r\n            border-top-right-radius: var(--t-navbar-item-border-radius);\r\n            box-shadow: var(--top-shadow);\r\n            box-sizing: border-box;\r\n            color: var(--t-base-border-colour);\r\n            display: flex;\r\n            font-weight: 500;\r\n            height: calc(100% + 2px);\r\n            padding: 1rem;\r\n            text-decoration: none;\r\n\r\n            &:hover {\r\n              text-decoration: underline;\r\n            }\r\n          }\r\n\r\n          &.open a {\r\n            color: var(--t-font-colour-default);\r\n            position: relative;\r\n            z-index: 2;\r\n          }\r\n\r\n          &:not(.open) a:hover {\r\n            background-color: color-mix(in oklab, var(--t-page-background-colour) 90%, white);\r\n            color: var(--t-font-colour-default);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .toolbar {\r\n      flex: 1;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n    }\r\n  }\r\n\r\n  .nav-toggle {\r\n    grid-area: toggle;\r\n    display: none;\r\n    align-self: center;\r\n  }\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  header {\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n  }\r\n}\r\n\r\n@media (max-width: 900px) {\r\n\r\n  header {\r\n    display: grid;\r\n    grid-template-areas: \"title toggle\" \"hcontent hcontent\";\r\n    transition: background-color var(--t-transition-duration-medium);\r\n    padding: 0;\r\n\r\n    .title {\r\n      grid-area: title;\r\n      margin-left: 1rem;\r\n    }\r\n\r\n    .collapsible-content {\r\n      grid-area: hcontent;\r\n      display: grid;\r\n      grid-template-rows: 1fr; /* To make height transition work */\r\n      transition: grid-template-rows var(--t-transition-duration-medium);\r\n\r\n      .collapsible-content-inner {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        overflow: hidden;\r\n\r\n        .toolbar {\r\n          align-self: flex-start;\r\n          padding: 0 1rem;\r\n        }\r\n\r\n        .nav {\r\n\r\n          ul {\r\n            flex-direction: column;\r\n            gap: 0;\r\n\r\n            li {\r\n\r\n              a {\r\n                box-sizing: border-box;\r\n                width: 100vw;\r\n                border-radius: 0;\r\n                box-shadow: none;\r\n                height: auto;\r\n                padding: 0.5rem 1rem;\r\n                background-color: transparent;\r\n\r\n                &:hover {\r\n                  box-shadow: var(--top-shadow), var(--bottom-shadow);\r\n                }\r\n              }\r\n\r\n              &:not(.open) a:hover {\r\n                background-color: color-mix(in oklab, var(--t-page-background-colour) 95%, var(--t-full-contrast-colour));\r\n              }\r\n\r\n              &.open a {\r\n                background-color: color-mix(in oklch, var(--t-base-colour) 75%, transparent);\r\n                --top-shadow: inset color-mix(in oklab, var(--t-base-colour) 85%, white) 0 1px 0;\r\n                --bottom-shadow: inset color-mix(in oklab, var(--t-base-colour) 85%, black) 0 -1px 0;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .nav-toggle {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      grid-area: toggle;\r\n      margin-right: 1rem;\r\n    }\r\n\r\n    &.nav-closed {\r\n      .collapsible-content {\r\n        grid-template-rows: 0fr;\r\n      }\r\n    }\r\n\r\n    &.nav-open {\r\n      width: 100%;\r\n      z-index: 100;\r\n      position: relative;\r\n      background-color: var(--t-page-background-colour);\r\n      box-shadow: var(--t-page-background-colour) 0 -100px, var(--bottom-shadow);\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Prop, State, Element } from '@stencil/core';\r\nimport { TNavMenuItem } from './TNavMenuItem';\r\nimport { MenuToggleIcon } from '../../icons/MenuToggleIcon';\r\nimport { CrossIcon } from '../../icons/CrossIcon';\r\n\r\n@Component({\r\n  tag: 't-layout-header',\r\n  styleUrl: 't-layout-header.css',\r\n})\r\nexport class TLayoutHeader {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() siteTitle: string;\r\n  @Prop() navItems: TNavMenuItem[] = [];\r\n\r\n  @State() navOpen: boolean = false;\r\n\r\n  expandNav() {\r\n    this.navOpen = true;\r\n  }\r\n\r\n  collapseNav() {\r\n    this.navOpen = false;\r\n  }\r\n\r\n  render() {\r\n    return <header class={this.navOpen ? 'nav-open' : 'nav-closed'}>\r\n      <div class=\"title\">{this.siteTitle}</div>\r\n      <div class=\"collapsible-content\">\r\n        <div class=\"collapsible-content-inner\">\r\n          <Navbar items={this.navItems} />\r\n          <div class=\"toolbar\">\r\n            <t-mode-switcher label=\"Fargemodus\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"nav-toggle\" onClick={() => this.navOpen ? this.collapseNav() : this.expandNav()}>\r\n        <t-button buttonAttributes={{ title: this.navOpen ? 'Lukk' : 'Meny' }}>\r\n          {this.navOpen ? <CrossIcon /> : <MenuToggleIcon />}\r\n        </t-button>\r\n      </div>\r\n    </header>;\r\n  }\r\n}\r\n\r\ntype NavBarProps = {\r\n  items: TNavMenuItem[];\r\n};\r\n\r\nconst Navbar = ({ items }: NavBarProps) => {\r\n  return (\r\n    <nav class=\"nav\">\r\n      <ul>\r\n        {items.map(item => (\r\n          <li class={item.open ? 'open' : ''} key={item.href}>\r\n            <a href={item.href}>\r\n              <span>{item.label}</span>\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n"],"version":3}