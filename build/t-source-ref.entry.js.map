{"file":"t-source-ref.entry.esm.js","mappings":";;;;AAAA,MAAM,aAAa,GAAG,6CAA6C;;MCStD,UAAU;;;;;IAMX,MAAM,WAAW;;QACzB,MAAM,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QACjD,OAAO,MAAA,IAAI,CAAC,QAAQ,mCAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KAC/D;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;KACxD;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;KAC1D;IAED,MAAM;QACJ,MAAM,OAAO,GAAwB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAEvE,QACE,EAAC,IAAI,uDACH,oEACE,4DAAK,IAAI,EAAC,SAAS,IACjB,+DAAQ,IAAI,EAAE,IAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CACnD,EACN,iEACE,IAAI,EAAC,SAAS,EACd,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GACtC,CACQ,CACP,EACP;KACH;IAED,kBAAkB;QAChB,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,OAAM,OAAO;YAClC,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,cAAc,EAAE,CAAC;YACnD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,MAAM,YAAY,GAAG,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChE,MAAM,OAAO,GAAuB,IAAI,CAAC,OAAO,CAAC;YACjD,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,aAAa,GAAqB,IAAI,CAAC,KAAK,CAAC;YACnD,aAAa,CAAC,SAAS,GAAG,IAAI,YAAY,GAAG,CAAC;YAC9C,aAAa,CAAC,IAAI,GAAG,IAAI,gBAAgB,GAAG,QAAQ,EAAE,CAAC;SACxD,CAAC,CAAC;KACJ;IAEO,MAAM,UAAU;QACtB,MAAM,cAAc,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;KAC1C;;;;;;;","names":[],"sources":["src/components/t-source-ref/t-source-ref.css?tag=t-source-ref&encapsulation=shadow","src/components/t-source-ref/t-source-ref.tsx"],"sourcesContent":["sup {\n  font-size: smaller;\n  vertical-align: super;\n}\n","import { Component, Host, h, Prop, Element, Method } from '@stencil/core';\nimport { SOURCE_ID_PREFIX } from '../../constants';\nimport { findUniqueIndex } from '../../utils/arrayUtils';\n\n@Component({\n  tag: 't-source-ref',\n  styleUrl: 't-source-ref.css',\n  shadow: true,\n})\nexport class TSourceRef {\n\n  @Prop() sourceId: string;\n\n  @Element() element: HTMLElement;\n\n  @Method() async getSourceId() {\n    await customElements.whenDefined('t-source-ref');\n    return this.sourceId ?? this.element.getAttribute('sourceid');\n  }\n\n  get tLink(): HTMLTLinkElement {\n    return this.element.shadowRoot.querySelector('t-link');\n  }\n\n  get tSource(): HTMLTSourceElement {\n    return this.element.shadowRoot.querySelector('t-source');\n  }\n\n  render() {\n    const article: HTMLTArticleElement = this.element.closest('t-article');\n\n    return (\n      <Host>\n        <t-tooltip>\n          <sup slot=\"trigger\">\n            <t-link href={`#${SOURCE_ID_PREFIX}${this.sourceId}`}/>\n          </sup>\n          <t-source\n            slot=\"content\"\n            source={article.sources[this.sourceId]}\n          />\n        </t-tooltip>\n      </Host>\n    );\n  }\n\n  componentDidRender() {\n    this.getArticle().then(async article => {\n      const sourceOrder = await article.getSourceOrder();\n      const sourceId = await this.getSourceId();\n      const sourceNumber = findUniqueIndex(sourceOrder, sourceId) + 1;\n      const tSource: HTMLTSourceElement = this.tSource;\n      tSource.source = article.sources[sourceId];\n      const sourceRefLink: HTMLTLinkElement = this.tLink;\n      sourceRefLink.innerText = `[${sourceNumber}]`;\n      sourceRefLink.href = `#${SOURCE_ID_PREFIX}${sourceId}`;\n    });\n  }\n\n  private async getArticle(): Promise<HTMLTArticleElement> {\n    await customElements.whenDefined('t-article');\n    return this.element.closest('t-article');\n  }\n}\n"],"version":3}