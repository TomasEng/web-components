{"version":3,"names":["componentColourSettingsCss","ComponentColourSettingsStyle0","ComponentColourSettings","this","handleHueChange","detail","hue","newSettings","Object","assign","settings","changeSettings","emit","handleSaturationChange","chroma","handleNumberOfHuesChange","numberOfHues","handleContrastChange","contrast","render","h","key","legend","label","onHueChange","value","onSaturationChange","onIntegerChange","min","max","class","onSliderChange","step","orderObject","obj","order","orderedObj","forEach","findUniqueIndex","array","unique","uniqueItems","indexOf","Set","tArticleCss","TArticleStyle0","TArticle","sourceRefElements","element","querySelectorAll","sourceIds","Array","from","map","sourceRefElement","sourceId","sourceOrder","orderedSources","sources","tArticleListCss","TArticleListStyle0","TArticleList","hueOffsetInTurns","items","item","Item","href","title","intro","_a","date","toLocaleDateString","tColumnCss","TColumnStyle0","TColumn","tFieldsetCss","TFieldsetStyle0","TFieldset","tHeadingCss","THeadingStyle0","THeading","level","tHuePickerCss","THuePickerStyle0","THuePicker","handleSliderChange","event","hueChange","tIntegerPickerCss","TIntegerPickerStyle0","textInputCss","TIntegerPickerStyle1","TIntegerPicker","handleChange","target","integerChange","valueAsNumber","htmlFor","slot","id","onChange","type","ChevronRightIcon","rest","__rest","SvgTemplate","d","fill","tLayoutMainCss","TLayoutMainStyle0","TLayoutMain","toggleLeftbar","leftbarOpen","stateClass","stickyLeftbar","name","onClick","tRowCss","TRowStyle0","TRow","tSaturationPickerCss","TSaturationPickerStyle0","TSaturationPicker","saturationChange","TSelectStyle0","TSelect","labelPlacement","options","option","selected","tSourceListCss","TSourceListStyle0","TSourceList","keys","SOURCE_ID_PREFIX","source","tSourceRefCss","TSourceRefStyle0","TSourceRef","article","closest","sourceNumber","Host","tSpinnerCss","TSpinnerStyle0","TSpinner","spinnerTitle","tSwitchCss","TSwitchStyle0","TSwitch","switch","checked","tTextfieldCss","TTextfieldStyle0","TTextfieldStyle1","TTextfield","onInput","e","valueChange","tTooltipCss","TTooltipStyle0","TTooltip","openTooltip","open","clearCloseTimeout","startCloseTimeout","closeTimeoutId","setTimeout","closeTooltip","TOOLTIP_HIDE_DELAY_MILLISECONDS","clearTimeout","closeOnEscape","componentDidLoad","document","addEventListener","disconnectedCallback","removeEventListener","visible","onClickOutside","onBlur","onFocus","onMouseEnter","onMouseLeave","role"],"sources":["src/preview-app/component-colour-settings/component-colour-settings.css?tag=component-colour-settings","src/preview-app/component-colour-settings/component-colour-settings.tsx","src/utils/objectUtils.ts","src/utils/arrayUtils.ts","src/components/t-article/t-article.css?tag=t-article","src/components/t-article/t-article.tsx","src/components/t-article-list/t-article-list.css?tag=t-article-list&encapsulation=shadow","src/components/t-article-list/t-article-list.tsx","src/components/t-column/t-column.css?tag=t-column&encapsulation=shadow","src/components/t-column/t-column.tsx","src/components/t-fieldset/t-fieldset.css?tag=t-fieldset&encapsulation=shadow","src/components/t-fieldset/t-fieldset.tsx","src/components/t-heading/t-heading.css?tag=t-heading&encapsulation=shadow","src/components/t-heading/t-heading.tsx","src/components/t-hue-picker/t-hue-picker.css?tag=t-hue-picker&encapsulation=shadow","src/components/t-hue-picker/t-hue-picker.tsx","src/components/t-integer-picker/t-integer-picker.css?tag=t-integer-picker&encapsulation=shadow","src/style/text-input.css?tag=t-integer-picker&encapsulation=shadow","src/components/t-integer-picker/t-integer-picker.tsx","src/icons/ChevronRightIcon.tsx","src/components/t-layout-main/t-layout-main.css?tag=t-layout-main","src/components/t-layout-main/t-layout-main.tsx","src/components/t-row/t-row.css?tag=t-row&encapsulation=shadow","src/components/t-row/t-row.tsx","src/components/t-saturation-picker/t-saturation-picker.css?tag=t-saturation-picker&encapsulation=shadow","src/components/t-saturation-picker/t-saturation-picker.tsx","src/style/text-input.css?tag=t-select&encapsulation=shadow","src/components/t-select/t-select.tsx","src/components/t-source-list/t-source-list.css?tag=t-source-list","src/components/t-source-list/t-source-list.tsx","src/components/t-source-ref/t-source-ref.css?tag=t-source-ref&encapsulation=shadow","src/components/t-source-ref/t-source-ref.tsx","src/components/t-spinner/t-spinner.css?tag=t-spinner&encapsulation=shadow","src/components/t-spinner/t-spinner.tsx","src/components/t-switch/t-switch.css?tag=t-switch&encapsulation=shadow","src/components/t-switch/t-switch.tsx","src/components/t-textfield/t-textfield.css?tag=t-textfield&encapsulation=shadow","src/style/text-input.css?tag=t-textfield&encapsulation=shadow","src/components/t-textfield/t-textfield.tsx","src/components/t-tooltip/t-tooltip.css?tag=t-tooltip&encapsulation=shadow","src/components/t-tooltip/t-tooltip.tsx"],"sourcesContent":[".contrast-slider {\n  --slider-background: linear-gradient(\n    to right,\n    transparent,\n    var(--t-full-contrast-colour)\n  );\n}\n","import { Component, EventEmitter, h, Prop, Event } from '@stencil/core';\r\nimport { ColourSettings } from '../../types/ColourSettings';\r\nimport {\r\n  THuePickerCustomEvent,\r\n  TIntegerPickerCustomEvent,\r\n  TSaturationPickerCustomEvent,\r\n  TSliderCustomEvent,\r\n} from '../../components';\r\n\r\n@Component({\r\n  tag: 'component-colour-settings',\r\n  styleUrl: 'component-colour-settings.css',\r\n})\r\nexport class ComponentColourSettings {\r\n\r\n  @Prop() settings: ColourSettings;\r\n\r\n  @Event() changeSettings: EventEmitter<ColourSettings>;\r\n\r\n  handleHueChange = ({ detail: hue }: THuePickerCustomEvent<number>) => {\r\n    const newSettings: ColourSettings = { ...this.settings, hue };\r\n    this.changeSettings.emit(newSettings);\r\n  };\r\n\r\n  handleSaturationChange = ({ detail: chroma }: TSaturationPickerCustomEvent<number>) => {\r\n    const newSettings: ColourSettings = { ...this.settings, chroma };\r\n    this.changeSettings.emit(newSettings);\r\n  };\r\n\r\n  handleNumberOfHuesChange = ({ detail: numberOfHues }: TIntegerPickerCustomEvent<number>) => {\r\n    const newSettings: ColourSettings = { ...this.settings, numberOfHues };\r\n    this.changeSettings.emit(newSettings);\r\n  };\r\n\r\n  handleContrastChange = ({ detail: contrast }: TSliderCustomEvent<number>) => {\r\n    const newSettings: ColourSettings = { ...this.settings, contrast };\r\n    this.changeSettings.emit(newSettings);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <t-fieldset legend='Innstillinger'>\r\n        <t-column>\r\n          <t-hue-picker label=\"Hovedfargetone\" onHueChange={this.handleHueChange} value={this.settings.hue} />\r\n          <t-saturation-picker\r\n            label=\"Metning\"\r\n            onSaturationChange={this.handleSaturationChange}\r\n            value={this.settings.chroma}\r\n          />\r\n          <t-integer-picker\r\n            label=\"Antall fargetoner\"\r\n            onIntegerChange={this.handleNumberOfHuesChange}\r\n            value={this.settings.numberOfHues}\r\n            min={1}\r\n            max={10}\r\n          />\r\n          <t-slider\r\n            class=\"contrast-slider\"\r\n            label=\"Kontrast\"\r\n            max={2}\r\n            min={0}\r\n            onSliderChange={this.handleContrastChange}\r\n            step={0.01}\r\n            value={this.settings.contrast}\r\n          />\r\n        </t-column>\r\n      </t-fieldset>\r\n    );\r\n  }\r\n}\r\n","export const orderObject = <T>(obj: T, order: (keyof T)[]): T => {\n  const orderedObj = {} as T;\n  order.forEach(key => {\n    orderedObj[key] = obj[key];\n  });\n  return orderedObj;\n};\n","export const findUniqueIndex = <T>(array: T[], value: T) => {\n  const unique = uniqueItems(array);\n  return unique.indexOf(value);\n};\n\nexport const uniqueItems = <T>(array: T[]): T[] => [...new Set(array)];\n",":host {\n  display: block;\n}\n","import { Component, Element, h, Prop } from '@stencil/core';\nimport { TSourceItemList } from '../../types/TSourceItemList';\nimport { orderObject } from '../../utils/objectUtils';\nimport { uniqueItems } from '../../utils/arrayUtils';\n\n@Component({\n  tag: 't-article',\n  styleUrl: 't-article.css',\n})\nexport class TArticle {\n\n  @Prop() sources: TSourceItemList = {};\n\n  @Element() element: HTMLElement;\n\n  render() {\n    const sourceRefElements: NodeListOf<HTMLTSourceRefElement> = this.element.querySelectorAll('t-source-ref');\n    const sourceIds = Array.from(sourceRefElements).map(sourceRefElement => sourceRefElement.sourceId);\n    const sourceOrder = uniqueItems(sourceIds);\n    const orderedSources = orderObject(this.sources, sourceOrder);\n\n    return (\n      <article>\n        <slot></slot>\n        <footer>\n          <t-source-list sources={orderedSources}/>\n        </footer>\n      </article>\n    );\n  }\n}\n","ul.t-article-list {\r\n  container-type: inline-size;\r\n  container-name: article-list;\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n\r\n  li a {\r\n    --background-colour: var(--t-small-contrast-colour);\r\n\r\n    background-color: var(--background-colour);\r\n    color: var(--t-font-colour-default);\r\n    column-gap: var(--t-spacing-in-group);\r\n    display: grid;\r\n    grid-template: \"title date\" auto\r\n                   \"intro date\" auto\r\n                   / 1fr auto;\r\n    padding: var(--t-spacing-in-group);\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      --background-colour: var(--t-base-low-contrast-colour);\r\n    }\r\n\r\n    .item-title {\r\n      font-weight: bold;\r\n      grid-area: title;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    .item-intro {\r\n      grid-area: intro;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    .item-date {\r\n      align-self: center;\r\n      grid-area: date;\r\n      text-align: right;\r\n    }\r\n  }\r\n\r\n  li:first-child a {\r\n    border-top-left-radius: var(--t-border-radius-default);\r\n    border-top-right-radius: var(--t-border-radius-default);\r\n  }\r\n\r\n  li:last-child a {\r\n    border-bottom-left-radius: var(--t-border-radius-default);\r\n    border-bottom-right-radius: var(--t-border-radius-default);\r\n  }\r\n}\r\n\r\n@container article-list (max-width: 600px) {\r\n  ul.t-article-list li a {\r\n    grid-template:\r\n        \"title title\"\r\n        \"intro date\"\r\n        / 1fr auto;\r\n  }\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\nimport { TArticleListItem } from './TArticleListItem';\r\n\r\n@Component({\r\n  tag: 't-article-list',\r\n  styleUrl: 't-article-list.css',\r\n  shadow: true,\r\n})\r\nexport class TArticleList {\r\n\r\n  @Prop() hue: ComponentHue = 0;\r\n  @Prop() items: TArticleListItem[] = [];\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <ul class='t-article-list'>\r\n        {this.items.map(item => <Item item={item} />)}\r\n      </ul>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n\r\nconst Item = ({ item }: { item: TArticleListItem }) => {\r\n  return <li>\r\n    <a href={item.href} title={item.title}>\r\n      <span class='item-title'>{item.title}</span>\r\n      <span class='item-intro'>{item.intro}</span>\r\n      <span class='item-date'>{item.date?.toLocaleDateString()}</span>\r\n    </a>\r\n  </li>;\r\n}\r\n","div {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: var(--t-spacing-default);\r\n}\r\n","import { Component, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-column',\r\n  styleUrl: 't-column.css',\r\n  shadow: true\r\n})\r\nexport class TColumn {\r\n\r\n  render() {\r\n    return <div><slot/></div>;\r\n  }\r\n}\r\n","fieldset {\r\n  border: none;\r\n  padding: 0;\r\n}\r\n\r\nlegend {\r\n  display: contents;\r\n  font-weight: bold;\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-fieldset',\r\n  styleUrl: 't-fieldset.css',\r\n  shadow: true\r\n})\r\nexport class TFieldset {\r\n\r\n  @Prop() legend: string;\r\n\r\n  render() {\r\n    return <fieldset><legend>{this.legend}</legend><slot/></fieldset>;\r\n  }\r\n}\r\n","h1 {\r\n  margin-top: 0;\r\n  padding-top: 0;\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-heading',\r\n  styleUrl: 't-heading.css',\r\n  shadow: true,\r\n})\r\nexport class THeading {\r\n\r\n  @Prop() level: 1 | 2 | 3 | 4 | 5 | 6 = 1;\r\n\r\n  render() {\r\n    switch (this.level) {\r\n      case 1:\r\n        return <h1><slot/></h1>;\r\n      case 2:\r\n        return <h2><slot/></h2>;\r\n      case 3:\r\n        return <h3><slot/></h3>;\r\n      case 4:\r\n        return <h4><slot/></h4>;\r\n      case 5:\r\n        return <h5><slot/></h5>;\r\n      case 6:\r\n        return <h6><slot/></h6>;\r\n      default:\r\n        return <h1><slot/></h1>;\r\n    }\r\n  }\r\n}\r\n",":host {\r\n  --chroma: 0.4;\r\n  --lightness: 0.8;\r\n  --slider-background: linear-gradient(\r\n    to right,\r\n    oklch(var(--lightness) var(--chroma) 0),\r\n    oklch(var(--lightness) var(--chroma) 30),\r\n    oklch(var(--lightness) var(--chroma) 60),\r\n    oklch(var(--lightness) var(--chroma) 90),\r\n    oklch(var(--lightness) var(--chroma) 120),\r\n    oklch(var(--lightness) var(--chroma) 150),\r\n    oklch(var(--lightness) var(--chroma) 180),\r\n    oklch(var(--lightness) var(--chroma) 210),\r\n    oklch(var(--lightness) var(--chroma) 240),\r\n    oklch(var(--lightness) var(--chroma) 270),\r\n    oklch(var(--lightness) var(--chroma) 300),\r\n    oklch(var(--lightness) var(--chroma) 330),\r\n    oklch(var(--lightness) var(--chroma) 360)\r\n  );\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { TSliderCustomEvent } from '../../components';\r\n\r\n@Component({\r\n  tag: 't-hue-picker',\r\n  styleUrl: 't-hue-picker.css',\r\n  shadow: true\r\n})\r\nexport class THuePicker {\r\n\r\n  @Prop() label: string;\r\n  @Prop() value: number;\r\n\r\n  @Event() hueChange: EventEmitter<number>;\r\n\r\n  handleSliderChange = (event: TSliderCustomEvent<number>) =>\r\n    this.hueChange.emit(event.detail);\r\n\r\n  render() {\r\n    return <t-slider\r\n      label={this.label}\r\n      max={360}\r\n      min={0}\r\n      onSliderChange={this.handleSliderChange}\r\n      step={1}\r\n      value={this.value}\r\n    />;\r\n  }\r\n}\r\n","input::-webkit-inner-spin-button {\r\n  height: var(--height);\r\n  cursor: pointer;\r\n  margin-right: calc(-1 * var(--padding));\r\n  margin-left: var(--padding);\r\n}\r\n",".text-input {\r\n  --font-size: var(--t-default-font-size);\r\n  --height: 1.5rem;\r\n  --padding: calc((var(--height) - var(--t-default-font-size))/2);\r\n  background-color: var(--t-input-field-background-colour);\r\n  border-radius: 6px;\r\n  border: 1px solid var(--t-base-border-colour);\r\n  box-shadow: inset 1px 1px 1px rgba(0,0,0,0.3);\r\n  box-sizing: border-box;\r\n  color: var(--t-font-colour-default);\r\n  line-height: var(--font-size);\r\n  outline: none;\r\n  padding: var(--padding);\r\n  transition: var(--t-transition-duration-medium);\r\n}\r\n\r\n.text-input:focus {\r\n  transform: scale(1.05);\r\n  background-color: var(--t-page-background-colour);\r\n  box-shadow: color-mix(in oklab, var(--t-base-border-colour) 20%, transparent) 0 0 24px;\r\n}\r\n\r\n.text-input::selection {\r\n  background-color: var(--t-selection-background-colour);\r\n  color: var(--t-selection-font-colour);\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\n\r\n@Component({\r\n  tag: 't-integer-picker',\r\n  styleUrls: ['t-integer-picker.css', '../../style/text-input.css'],\r\n  shadow: true,\r\n})\r\nexport class TIntegerPicker {\r\n\r\n  @Prop() label: string;\r\n  @Prop() value: number;\r\n  @Prop() min: number;\r\n  @Prop() max: number;\r\n  @Prop() hue: ComponentHue;\r\n\r\n  @Event() integerChange: EventEmitter<number>;\r\n\r\n  private handleChange = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.integerChange.emit(target.valueAsNumber);\r\n  };\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <internal-input-wrapper>\r\n        <label htmlFor=\"input\" slot=\"label\">{this.label}</label>\r\n        <input\r\n          class=\"text-input\"\r\n          id=\"input\"\r\n          max={this.max}\r\n          min={this.min}\r\n          onChange={this.handleChange}\r\n          slot=\"input\"\r\n          type=\"number\"\r\n          value={this.value}\r\n        />\r\n      </internal-input-wrapper>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n","import { h } from '@stencil/core';\r\nimport { IconProps } from './IconProps';\r\nimport { SvgTemplate } from './SvgTemplate';\r\n\r\nexport const ChevronRightIcon = ({ fill, ...rest }: IconProps) => (\r\n  <SvgTemplate {...rest}>\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M9.47 5.97a.75.75 0 0 1 1.06 0l5.5 5.5a.75.75 0 0 1 0 1.06l-5.5 5.5a.75.75 0 1 1-1.06-1.06L14.44 12 9.47 7.03a.75.75 0 0 1 0-1.06Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </SvgTemplate>\r\n);\r\n",".main {\r\n  --border-radius: 12px;\r\n  border-radius: var(--border-radius);\r\n  box-shadow: var(--back-shadow);\r\n  color: var(--t-font-colour-default);\r\n  display: flex;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.main .leftbar {\r\n  --background-base: color-mix(in oklch, var(--t-page-background-colour) 95%, var(--t-full-contrast-colour));\r\n  --main-background: color-mix(in oklch, var(--background-base) 90%, var(--t-background-background-colour));\r\n  --top-shadow: inset color-mix(in oklab, var(--background-base) 90%, white) 0 1px 0;\r\n  --bottom-shadow: inset color-mix(in oklab, var(--background-base) 90%, black) 0 -1px 0;\r\n  /* --main-background, --top-shadow and --bottom-shadow are already defined at a higher level, but the change of --background-base does not change their values unless they are redefined here for some reason */\r\n  background-color: var(--main-background);\r\n  border-bottom-left-radius: var(--border-radius);\r\n  border-top-left-radius: var(--border-radius);\r\n  box-shadow: var(--top-shadow), var(--bottom-shadow);\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n\r\n  .leftbar-content {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .leftbar-toggle {\r\n    display: none;\r\n  }\r\n\r\n  &.sticky .leftbar-content {\r\n    max-height: 100vh;\r\n    overflow-y: auto;\r\n    position: sticky;\r\n    top: 0;\r\n  }\r\n}\r\n\r\n.main .content {\r\n  background-color: var(--main-background);\r\n  border-bottom-right-radius: var(--border-radius);\r\n  border-top-right-radius: var(--border-radius);\r\n  box-shadow: var(--top-shadow), var(--bottom-shadow);\r\n  flex-grow: 3;\r\n  padding: 1rem;\r\n}\r\n\r\n.leftbar:has(.leftbar-content:empty) {\r\n  display: none;\r\n}\r\n\r\n.leftbar:has(.leftbar-content:empty) + .content {\r\n  border-radius: var(--border-radius);\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .main {\r\n    --border-radius: 0;\r\n  }\r\n}\r\n\r\n@media (max-width: 800px) {\r\n\r\n  .main {\r\n    --closed-bar-width: var(--t-clickable-area-size);\r\n    position: relative;\r\n\r\n    .leftbar {\r\n      display: flex;\r\n      flex-direction: row;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      height: 100%;\r\n      z-index: 100;\r\n      background-color: transparent;\r\n\r\n      .leftbar-toggle {\r\n        backdrop-filter: var(--t-popover-backdrop-filter);\r\n        background-color: color-mix(in oklch, var(--t-base-colour) calc(var(--t-popover-alpha) * 100%), transparent);\r\n        border: 0;\r\n        color: var(--t-font-colour-default);\r\n        display: block;\r\n        height: 100%;\r\n        max-height: 100vh;\r\n        position: sticky;\r\n        top: 0;\r\n        width: var(--closed-bar-width);\r\n\r\n        &:hover {\r\n          background-color: var(--t-base-colour);\r\n        }\r\n\r\n        .chevron {\r\n          transform: scale(1.5) rotate(0deg);\r\n        }\r\n      }\r\n\r\n      .leftbar-content {\r\n        backdrop-filter: var(--t-popover-backdrop-filter);\r\n        background-color: var(--t-popover-background-colour-base);\r\n        overflow: hidden;\r\n        transition-duration: var(--t-transition-duration-medium);\r\n        transition-property: width, padding;\r\n        width: 200px;\r\n      }\r\n    }\r\n\r\n    .content {\r\n      padding-left: calc(1rem + var(--closed-bar-width));\r\n    }\r\n  }\r\n\r\n  .main.leftbar-closed {\r\n    .leftbar {\r\n      position: absolute;\r\n      height: 100%;\r\n      width: fit-content;\r\n\r\n      .leftbar-content {\r\n        width: 0;\r\n        padding: 1rem 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .main.leftbar-open {\r\n    .leftbar {\r\n      .leftbar-content {\r\n        width: 200px;\r\n      }\r\n\r\n      .leftbar-toggle {\r\n        box-shadow: #0002 6px 0 12px;\r\n\r\n        .chevron {\r\n          transform: scale(1.5) rotate(180deg);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Prop, State } from '@stencil/core';\r\nimport { ChevronRightIcon } from '../../icons/ChevronRightIcon';\r\n\r\n@Component({\r\n  tag: 't-layout-main',\r\n  styleUrl: 't-layout-main.css',\r\n})\r\nexport class TLayoutMain {\r\n\r\n  @State() leftbarOpen = false;\r\n\r\n  @Prop() stickyLeftbar: boolean = false;\r\n\r\n  toggleLeftbar() {\r\n    this.leftbarOpen = !this.leftbarOpen;\r\n  }\r\n\r\n  render() {\r\n    const stateClass = this.leftbarOpen ? 'leftbar-open' : 'leftbar-closed';\r\n\r\n    return <internal-style-provider>\r\n      <main class={`main ${stateClass}`}>\r\n        <div class={`leftbar${this.stickyLeftbar ? ' sticky' : ''}`}>\r\n          <div class=\"leftbar-content\">\r\n            <slot name=\"leftbar\" />\r\n          </div>\r\n          <button\r\n            class=\"leftbar-toggle\"\r\n            onClick={() => this.toggleLeftbar()}\r\n            title={this.leftbarOpen ? 'Lukk sidepanel' : 'Åpne sidepanel'}\r\n          >\r\n            <ChevronRightIcon class='chevron'/>\r\n          </button>\r\n        </div>\r\n        <div class=\"content\">\r\n          <slot name='content' />\r\n        </div>\r\n      </main>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n","div {\r\n  display: flex;\r\n  gap: var(--t-spacing-default);\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n","import { Component, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-row',\r\n  styleUrl: 't-row.css',\r\n  shadow: true\r\n})\r\nexport class TRow {\r\n\r\n  render() {\r\n    return <div><slot/></div>;\r\n  }\r\n}\r\n",":host {\r\n  --slider-background: linear-gradient(\r\n    to right,\r\n    oklch(0.8 0 var(--t-base-colour-hue)),\r\n    oklch(0.8 0.4 var(--t-base-colour-hue))\r\n  );\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { TSliderCustomEvent } from '../../components';\r\n\r\n@Component({\r\n  tag: 't-saturation-picker',\r\n  styleUrl: 't-saturation-picker.css',\r\n  shadow: true,\r\n})\r\nexport class TSaturationPicker {\r\n\r\n  @Prop() label: string;\r\n  @Prop() value: number;\r\n\r\n  @Event() saturationChange: EventEmitter<number>;\r\n\r\n  handleSliderChange = (event: TSliderCustomEvent<number>) =>\r\n    this.saturationChange.emit(event.detail);\r\n\r\n  render() {\r\n    return <t-slider\r\n      label={this.label}\r\n      max={0.3}\r\n      min={0}\r\n      onSliderChange={this.handleSliderChange}\r\n      step={0.01}\r\n      value={this.value}\r\n    />;\r\n  }\r\n}\r\n",".text-input {\r\n  --font-size: var(--t-default-font-size);\r\n  --height: 1.5rem;\r\n  --padding: calc((var(--height) - var(--t-default-font-size))/2);\r\n  background-color: var(--t-input-field-background-colour);\r\n  border-radius: 6px;\r\n  border: 1px solid var(--t-base-border-colour);\r\n  box-shadow: inset 1px 1px 1px rgba(0,0,0,0.3);\r\n  box-sizing: border-box;\r\n  color: var(--t-font-colour-default);\r\n  line-height: var(--font-size);\r\n  outline: none;\r\n  padding: var(--padding);\r\n  transition: var(--t-transition-duration-medium);\r\n}\r\n\r\n.text-input:focus {\r\n  transform: scale(1.05);\r\n  background-color: var(--t-page-background-colour);\r\n  box-shadow: color-mix(in oklab, var(--t-base-border-colour) 20%, transparent) 0 0 24px;\r\n}\r\n\r\n.text-input::selection {\r\n  background-color: var(--t-selection-background-colour);\r\n  color: var(--t-selection-font-colour);\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\nimport { TSelectOption } from './TSelectOption';\r\nimport { LabelPlacement } from '../../types/LabelPlacement';\r\n\r\n@Component({\r\n  tag: 't-select',\r\n  styleUrls: ['../../style/text-input.css'],\r\n  shadow: true,\r\n})\r\nexport class TSelect {\r\n\r\n  @Prop() hue: ComponentHue = 0;\r\n  @Prop() label: string;\r\n  @Prop() options: TSelectOption[];\r\n  @Prop() value: string;\r\n  @Prop() labelPlacement: LabelPlacement = 'top';\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <internal-input-wrapper labelPlacement={this.labelPlacement}>\r\n        <label htmlFor=\"input\" slot=\"label\">{this.label}</label>\r\n        <select\r\n          slot=\"input\"\r\n          id=\"input\"\r\n          class=\"text-input\"\r\n        >\r\n          {this.options.map(option => (\r\n            <option\r\n              value={option.value}\r\n              selected={option.value === this.value}\r\n            >\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </internal-input-wrapper>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n",":host {\n  display: block;\n}\n\nol {\n  font-size: smaller;\n  display: flex;\n  flex-direction: column;\n  gap: var(--t-spacing-in-group);\n}\n\nli:target {\n  background-color: var(--t-base-colour);\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { TSourceItemList } from '../../types/TSourceItemList';\nimport { SOURCE_ID_PREFIX } from '../../constants';\n\n@Component({\n  tag: 't-source-list',\n  styleUrl: 't-source-list.css',\n})\nexport class TSourceList {\n\n  @Prop() sources: TSourceItemList = {};\n\n  render() {\n    return (\n      <ol>\n        {Object.keys(this.sources).map(id => (\n          <li id={`${SOURCE_ID_PREFIX}${id}`}>\n            <t-source source={this.sources[id]}/>\n          </li>\n        ))}\n      </ol>\n    );\n  }\n}\n","sup {\n  font-size: smaller;\n  vertical-align: super;\n}\n","import { Component, Host, h, Prop, Element } from '@stencil/core';\nimport { SOURCE_ID_PREFIX } from '../../constants';\nimport { findUniqueIndex, uniqueItems } from '../../utils/arrayUtils';\n\n@Component({\n  tag: 't-source-ref',\n  styleUrl: 't-source-ref.css',\n  shadow: true,\n})\nexport class TSourceRef {\n\n  @Prop() sourceId: string;\n\n  @Element() element: HTMLElement;\n\n  render() {\n    const article: HTMLTArticleElement = this.element.closest('t-article');\n    const sourceRefElements: NodeListOf<HTMLTSourceRefElement> = article.querySelectorAll('t-source-ref');\n    const sourceIds = Array.from(sourceRefElements).map(sourceRefElement => sourceRefElement.sourceId);\n    const sourceNumber = findUniqueIndex(sourceIds, this.sourceId) + 1;\n\n    return (\n      <Host>\n        <t-tooltip>\n          <sup slot=\"trigger\">\n            <t-link href={`#${SOURCE_ID_PREFIX}${this.sourceId}`}>[{sourceNumber}]</t-link>\n          </sup>\n          <t-source\n            slot=\"content\"\n            source={article.sources[this.sourceId]}\n          />\n        </t-tooltip>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n",".t-spinner {\r\n  --size: 2rem;\r\n  animation: spin 1s linear infinite;\r\n  background-color: transparent;\r\n  border-color: var(--t-small-contrast-colour);\r\n  border-radius: 50%;\r\n  border-style: solid;\r\n  border-top-color: var(--t-base-fill-colour);\r\n  border-width: 4px;\r\n  box-sizing: border-box;\r\n  display: inline-block;\r\n  height: var(--size);\r\n  position: relative;\r\n  width: var(--size);\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(1turn);\r\n  }\r\n}\r\n","import { Component, h, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-spinner',\r\n  styleUrl: 't-spinner.css',\r\n  shadow: true,\r\n})\r\nexport class TSpinner {\r\n\r\n  @Prop() spinnerTitle: string = 'Laster';\r\n\r\n  render() {\r\n    return <span class='t-spinner' title={this.spinnerTitle}/>;\r\n  }\r\n}\r\n",".wrapper {\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  gap: var(--t-spacing-inline);\r\n  align-items: center;\r\n}\r\n\r\n.switch {\r\n  --height: 1.5rem;\r\n  --padding: 1px;\r\n  --width: calc(var(--height) * 2);\r\n  --hover-translate: 4px;\r\n  --border-width: 1px;\r\n  position: relative;\r\n  display: inline-block;\r\n  height: var(--height);\r\n  width: var(--width);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.slider {\r\n  --top-mix-colour: black;\r\n  --bottom-mix-colour: white;\r\n  --chroma: 0;\r\n  --fill-colour: var(--t-input-field-background-colour);\r\n  background: linear-gradient(\r\n    to bottom,\r\n    color-mix(in oklab, var(--fill-colour) 90%, var(--top-mix-colour)),\r\n    var(--fill-colour),\r\n    color-mix(in oklab, var(--fill-colour) 90%, var(--bottom-mix-colour))\r\n  );\r\n  border-radius: 100px;\r\n  border:\r\n    var(--border-width)\r\n    solid\r\n    var(--t-base-border-colour);\r\n  bottom: 0;\r\n  box-shadow: #0004 0 1px 2px 1px inset;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  height: var(--height);\r\n  left: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  transition: var(--t-transition-duration-long);\r\n  width: var(--width);\r\n}\r\n\r\n.slider:before {\r\n  aspect-ratio: 1;\r\n  background-color: var(--t-base-fill-colour);\r\n  border-radius: 50%;\r\n  top: var(--padding);\r\n  content: \"\";\r\n\r\n  height: calc(var(--height) - var(--padding) * 2 - var(--border-width) * 2);\r\n  left: var(--padding);\r\n  position: absolute;\r\n  transition: var(--t-transition-duration-short);\r\n}\r\n\r\ninput:checked + .slider {\r\n  --chroma: 0.4;\r\n  --top-mix-colour: white;\r\n  --bottom-mix-colour: black;\r\n  --fill-colour: var(--t-base-fill-colour);\r\n  box-shadow: none;\r\n}\r\n\r\ninput:checked + .slider:before {\r\n  transform: translateX(calc(var(--width) - var(--height)));\r\n  background-color: var(--t-page-background-colour);\r\n}\r\n\r\n.switch:has(:focus-visible) .slider {\r\n  outline: #000 auto 2px;\r\n}\r\n\r\n.wrapper:hover .slider:before {\r\n  transform: translateX(var(--hover-translate));\r\n}\r\n\r\n.wrapper:hover input:checked + .slider:before {\r\n  transform: translateX(calc(var(--width) - var(--height) - var(--hover-translate)));\r\n}\r\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-switch',\r\n  styleUrl: 't-switch.css',\r\n  shadow: true,\r\n})\r\nexport class TSwitch {\r\n\r\n  @Event() switch: EventEmitter<boolean>;\r\n\r\n  @Prop() checked: boolean = false;\r\n  @Prop() hue: number = 0;\r\n\r\n  handleChange = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.switch.emit(target.checked);\r\n  };\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <label htmlFor=\"input\" class=\"wrapper\">\r\n      <span class=\"switch\">\r\n        <input id=\"input\" type=\"checkbox\" onChange={this.handleChange} checked={this.checked} />\r\n        <span class=\"slider\" />\r\n      </span>\r\n        <span class=\"label\"><slot /></span>\r\n      </label>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n",null,".text-input {\r\n  --font-size: var(--t-default-font-size);\r\n  --height: 1.5rem;\r\n  --padding: calc((var(--height) - var(--t-default-font-size))/2);\r\n  background-color: var(--t-input-field-background-colour);\r\n  border-radius: 6px;\r\n  border: 1px solid var(--t-base-border-colour);\r\n  box-shadow: inset 1px 1px 1px rgba(0,0,0,0.3);\r\n  box-sizing: border-box;\r\n  color: var(--t-font-colour-default);\r\n  line-height: var(--font-size);\r\n  outline: none;\r\n  padding: var(--padding);\r\n  transition: var(--t-transition-duration-medium);\r\n}\r\n\r\n.text-input:focus {\r\n  transform: scale(1.05);\r\n  background-color: var(--t-page-background-colour);\r\n  box-shadow: color-mix(in oklab, var(--t-base-border-colour) 20%, transparent) 0 0 24px;\r\n}\r\n\r\n.text-input::selection {\r\n  background-color: var(--t-selection-background-colour);\r\n  color: var(--t-selection-font-colour);\r\n}\r\n","import { Component, EventEmitter, h, Prop, Event } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\n\r\n@Component({\r\n  tag: 't-textfield',\r\n  styleUrls: ['t-textfield.css', '../../style/text-input.css'],\r\n  shadow: true,\r\n})\r\nexport class TTextfield {\r\n\r\n  @Prop() hue: ComponentHue = 0;\r\n  @Prop() label: string;\r\n  @Prop() value: string;\r\n\r\n  @Event() valueChange: EventEmitter<string>;\r\n\r\n  render() {\r\n    return <internal-style-provider hueOffsetInTurns={this.hue}>\r\n      <internal-input-wrapper>\r\n        <label htmlFor=\"input\" slot='label'>{this.label}</label>\r\n        <input\r\n          slot='input'\r\n          id=\"input\"\r\n          class=\"text-input\"\r\n          type=\"text\"\r\n          value={this.value}\r\n          onInput={(e) => {\r\n            this.valueChange.emit((e.target as HTMLInputElement).value);\r\n          }}\r\n        />\r\n      </internal-input-wrapper>\r\n    </internal-style-provider>;\r\n  }\r\n}\r\n","#tooltip {\n  backdrop-filter: var(--t-popover-backdrop-filter);\n  background: var(--t-popover-background-colour-base);\n  border-radius: var(--t-popover-border-radius);\n  box-shadow:\n    color-mix(in oklab, var(--t-popover-background-colour-base) 85%, white) inset 0 1px,\n    color-mix(in oklab, var(--t-popover-background-colour-base) 85%, black) inset 0 -1px,\n    var(--t-popover-shadow);\n  color: var(--t-full-contrast-colour);\n  padding: var(--t-spacing-in-group);\n  width: max-content;\n  z-index: var(--t-z-index-tooltip);\n}\n\n#button {\n  background: none;\n  border: none;\n  color: var(--t-link-colour);\n  cursor: pointer;\n  font-family: var(--t-default-font-family);\n  font-size: var(--t-default-font-size);\n  margin: 0;\n  padding: 0;\n}\n","import { Component, h, Element, State } from '@stencil/core';\nimport { TOOLTIP_HIDE_DELAY_MILLISECONDS } from '../../constants';\n\n@Component({\n  tag: 't-tooltip',\n  styleUrl: 't-tooltip.css',\n  shadow: true,\n})\nexport class TTooltip {\n\n  @Element() element: HTMLElement;\n\n  @State() open: boolean = false;\n\n  private closeTimeoutId: ReturnType<typeof setTimeout>;\n\n  openTooltip() {\n    this.open = true;\n    this.clearCloseTimeout();\n  }\n\n  startCloseTimeout() {\n    this.clearCloseTimeout();\n    this.closeTimeoutId = setTimeout(() => {\n      this.closeTooltip();\n    }, TOOLTIP_HIDE_DELAY_MILLISECONDS);\n  }\n\n  clearCloseTimeout() {\n    clearTimeout(this.closeTimeoutId);\n  }\n\n  closeTooltip() {\n    this.open = false;\n  }\n\n  closeOnEscape(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.closeTooltip();\n    }\n  }\n\n  componentDidLoad() {\n    document.addEventListener('keydown', (event) => this.closeOnEscape(event));\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('keydown', (event) => this.closeOnEscape(event));\n  }\n\n  render() {\n    return (\n      <t-floating-element visible={this.open} onClickOutside={() => this.closeTooltip()}>\n        <span\n          aria-describedby=\"tooltip\"\n          id=\"button\"\n          onBlur={() => this.closeTooltip()}\n          onFocus={() => this.openTooltip()}\n          onMouseEnter={() => this.openTooltip()}\n          onMouseLeave={() => this.startCloseTimeout()}\n          slot=\"anchor\"\n        >\n          <slot name=\"trigger\" />\n        </span>\n        <div\n          id=\"tooltip\"\n          role=\"tooltip\"\n          slot=\"content\"\n          onMouseEnter={() => this.clearCloseTimeout()}\n          onMouseLeave={() => this.startCloseTimeout()}\n        >\n          <slot name=\"content\"/>\n        </div>\n      </t-floating-element>\n    );\n  }\n}\n"],"mappings":"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"}