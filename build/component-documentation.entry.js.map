{"file":"component-documentation.entry.esm.js","mappings":"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","names":[],"sources":["src/utils/stringUtils.ts","src/test-utils/ComponentTestCode.ts","src/preview-app/component-documentation/component-documentation.tsx"],"sourcesContent":["export const kebabToCamel = (kebab: string) => kebab.replace(/-([a-z0-9])/g, (g) => g[1].toUpperCase());\n\nexport const kebabToPascal = (kebab: string) => kebabToCamel(kebab).replace(/^[a-z]/, (g) => g.toUpperCase());\n\nexport const camelToPascal = (camel: string) => camel.replace(/^[a-z]/, (g) => g.toUpperCase());\n\nexport const collapseWhitespace = (text: string) => text.replace(/\\s+/g, ' ');\n","import { camelToPascal, collapseWhitespace, kebabToCamel, kebabToPascal } from '../utils/stringUtils';\nimport { stringifyObjectLines } from '../utils/objectUtils';\n\nexport type ComponentTestCodeConfig = {\n  componentName: string;\n  props?: {\n    [propName: string]: any;\n  };\n  children?: (ComponentTestCodeConfig | string)[];\n  events?: {\n    [eventName: string]: (event: Event & { detail: any }) => void;\n  };\n};\n\nconst indent = '  ';\nconst indentLines = (lines: string[]) => lines.map(line => indent + line);\n\nexport class ComponentTestCode {\n  readonly config: ComponentTestCodeConfig;\n\n  constructor(config: ComponentTestCodeConfig) {\n    this.config = config;\n  }\n\n  configString(): string {\n    return JSON.stringify(this.config, null, 2);\n  }\n\n  withHue(hue: number, hueProp: string = 'hue'): ComponentTestCode {\n    return new ComponentTestCode(\n      {\n        ...this.config,\n        props: {\n          ...this.config.props,\n          [hueProp]: hue,\n        },\n      },\n    );\n  }\n\n  withId(id: string): ComponentTestCode {\n    return new ComponentTestCode(\n      {\n        ...this.config,\n        props: {\n          ...this.config.props,\n          id,\n        },\n      },\n    );\n  }\n\n  generateElement(): HTMLElement {\n    const element = document.createElement(this.config.componentName);\n    for (const propName in this.config.props) {\n      element[propName] = this.config.props[propName];\n    }\n    for (const eventName in this.config.events) {\n      element.addEventListener(eventName, this.config.events[eventName]);\n    }\n    this.childrenTestCodes().forEach(childTestCode => {\n      if (typeof childTestCode === 'string') {\n        element.appendChild(document.createTextNode(childTestCode));\n      } else {\n        element.appendChild(childTestCode.generateElement());\n      }\n    });\n    return element;\n  }\n\n  generateCode(): string {\n    return this.generateCodeLines().join('\\n');\n  }\n\n  generateCodeLines(): string[] {\n    const lines: string[] = this.generateHtmlLines();\n    const scriptLines = this.generateScriptLines();\n    if (scriptLines.length) {\n      lines.push('');\n      lines.push('<script type=\"text/javascript\">');\n      lines.push(...indentLines(scriptLines));\n      lines.push('</script>');\n    }\n    return lines;\n  }\n\n  generateMinifiedHtml(): string {\n    return collapseWhitespace(this.generateHtml());\n  }\n\n  generateHtml(): string {\n    return this.generateHtmlLines().join('\\n');\n  }\n\n  private generateHtmlLines(): string[] {\n    const lines: string[] = [];\n    const propLines = this.generateHtmlPropLines();\n    const childLines = indentLines(this.childrenHtmlLines());\n    if (propLines.length === 0 && childLines.length === 0) {\n      lines.push(`<${this.config.componentName}></${this.config.componentName}>`);\n    } else if (propLines.length === 0) {\n      lines.push(`<${this.config.componentName}>`);\n      lines.push(...childLines);\n      lines.push(`</${this.config.componentName}>`);\n    } else if (childLines.length === 0) {\n      if (propLines.length === 1) {\n        lines.push(`<${this.config.componentName} ${propLines[0]}></${this.config.componentName}>`);\n      } else {\n        lines.push(`<${this.config.componentName}`);\n        lines.push(...indentLines(propLines));\n        lines.push(`></${this.config.componentName}>`);\n      }\n    } else {\n      if (propLines.length === 1) {\n        lines.push(`<${this.config.componentName} ${propLines[0]}>`);\n      } else {\n        lines.push(`<${this.config.componentName}`);\n        lines.push(...indentLines(propLines));\n        lines.push(`>`);\n      }\n      lines.push(...childLines);\n      lines.push(`</${this.config.componentName}>`);\n    }\n    return lines;\n  }\n\n  private childrenHtmlLines(): string[] {\n    return this\n      .childrenTestCodes()\n      .map(childTestCode => typeof childTestCode === 'string' ? childTestCode : childTestCode.generateHtmlLines())\n      .flat();\n  }\n\n  private childrenTestCodes(): (ComponentTestCode | string)[] {\n    return this\n        .config\n        ?.children\n        ?.map(childConfig => typeof childConfig === 'string' ? childConfig : new ComponentTestCode(childConfig))\n      ?? [];\n  }\n\n  private generateHtmlPropLines(): string[] {\n    const lines: string[] = [];\n    for (const propName in this.config.props) {\n      const value = this.config.props[propName];\n      if (typeof value === 'string') {\n        lines.push(`${propName}=${JSON.stringify(value)}`);\n      } else if (['number', 'boolean'].includes(typeof value)) {\n        lines.push(`${propName}=\"${value}\"`);\n      }\n    }\n    return lines;\n  }\n\n  generateMinifiedScript(): string {\n    return collapseWhitespace(this.generateScript());\n  }\n\n  generateScript(): string {\n    return this.generateScriptLines().join('\\n');\n  }\n\n  private generateScriptLines(): string[] {\n    const lines: string[] = [];\n    const objectPropLines = this.generateHtmlObjectPropLines();\n    const eventLines = this.generateHtmlEventLines();\n    if (objectPropLines.length + eventLines.length) {\n      const varName = this.componentVarName();\n      lines.push(`const ${varName} = document.querySelector(\"${this.selector()}\");`);\n      lines.push(...objectPropLines);\n      lines.push(...eventLines);\n    }\n    return lines;\n  }\n\n  private selector(): string {\n    return this.config.props?.id ? `#${this.config.props.id}` : this.config.componentName;\n  }\n\n  private componentVarName(): string {\n    const componentNameKebab = kebabToCamel(this.config.componentName);\n    if (this.config.props?.id) {\n      return componentNameKebab + kebabToPascal(this.config.props.id);\n    } else {\n      return componentNameKebab;\n    }\n  }\n\n  private generateHtmlObjectPropLines(): string[] {\n    const lines: string[] = [];\n    const varName = this.componentVarName();\n    for (const propName in this.config.props) {\n      const value = this.config.props[propName];\n      if (typeof value === 'object') {\n        const objLines = stringifyObjectLines(value);\n        lines.push(`${varName}.${propName} = ${objLines[0]}`);\n        lines.push(...objLines.slice(1, objLines.length - 1));\n        lines.push(`${objLines[objLines.length - 1]};`);\n      } else if (typeof value === 'function') {\n        lines.push(`${varName}.${propName} = ${value.toString()};`);\n      }\n    }\n    return lines;\n  }\n\n  private generateHtmlEventLines(): string[] {\n    const lines: string[] = [];\n    const varName = this.componentVarName();\n    for (const eventName in this.config.events) {\n      const handlerName = this.eventHandlerName(eventName);\n      const script = this.config.events[eventName];\n      lines.push(`const ${handlerName} = ${script};`);\n      lines.push(`${varName}.addEventListener(\"${eventName}\", ${handlerName});`);\n    }\n    return lines;\n  }\n\n  private eventHandlerName(eventName: string): string {\n    const prefix = 'handle';\n    const suffix = camelToPascal(eventName);\n    if (this.config.props?.id) {\n      return prefix + kebabToPascal(this.config.props.id) + suffix;\n    } else {\n      return prefix + suffix;\n    }\n  }\n\n  generateReactCode(): string {\n    return this.generateReactCodeLines().join('\\n');\n  }\n\n  generateReactCodeLines(): string[] {\n    const lines: string[] = [];\n    const propLines = this.generateJsxPropLines();\n    const childLines = indentLines(this.generateReactChildrenLines());\n    const componentName = this.reactComponentName();\n    if (propLines.length === 0 && childLines.length === 0) {\n      lines.push(`<${componentName}/>`);\n    } else if (propLines.length === 0) {\n      lines.push(`<${componentName}>`);\n      lines.push(...childLines);\n      lines.push(`</${componentName}>`);\n    } else if (childLines.length === 0) {\n      if (propLines.length === 1) {\n        lines.push(`<${componentName} ${propLines[0]}/>`);\n      } else {\n        lines.push(`<${componentName}`);\n        lines.push(...indentLines(propLines));\n        lines.push(`/>`);\n      }\n    } else {\n      if (propLines.length === 1) {\n        lines.push(`<${componentName} ${propLines[0]}>`);\n      } else {\n        lines.push(`<${componentName}`);\n        lines.push(...indentLines(propLines));\n        lines.push(`>`);\n      }\n      lines.push(...childLines);\n      lines.push(`</${componentName}>`);\n    }\n    return lines;\n  }\n\n  private generateJsxPropLines(): string[] {\n    const lines: string[] = [];\n    for (const propName in this.config.props) {\n      const value = this.config.props[propName];\n      switch (typeof value) {\n        case 'string':\n          lines.push(`${propName}=${JSON.stringify(value)}`);\n          break;\n        default: {\n          const objLines = stringifyObjectLines(value);\n          if (objLines.length === 1) {\n            lines.push(`${propName}={${objLines[0]}}`);\n          } else {\n            lines.push(`${propName}={${objLines[0]}`);\n            lines.push(...objLines.slice(1, objLines.length - 1));\n            lines.push(`${objLines[objLines.length - 1]}}`);\n          }\n          break;\n        }\n      }\n    }\n    for (const eventName in this.config.events) {\n      const handlerName = 'on' + camelToPascal(eventName);\n      const script = this.config.events[eventName].toString();\n      const scriptLines = script.split('\\n');\n      if (scriptLines.length === 1) {\n        lines.push(`${handlerName}={${script}}`);\n      } else {\n        lines.push(`${handlerName}={${scriptLines[0]}`);\n        lines.push(...indentLines(scriptLines.slice(1, scriptLines.length - 1)));\n        lines.push(`${scriptLines[scriptLines.length - 1]}}`);\n      }\n    }\n    return lines;\n  }\n\n  private generateReactChildrenLines(): string[] {\n    return this\n      .childrenTestCodes()\n      .map(childTestCode => typeof childTestCode === 'string' ? childTestCode : childTestCode.generateReactCodeLines())\n      .flat();\n  }\n\n  private reactComponentName(): string {\n    if (htmlTags.includes(this.config.componentName)) {\n      return this.config.componentName;\n    } else {\n      return kebabToPascal(this.config.componentName);\n    }\n  }\n}\n\nconst htmlTags = [\n  \"a\",\n  \"abbr\",\n  \"address\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"bdi\",\n  \"bdo\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"small\",\n  \"source\",\n  \"span\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\"\n];\n","import { Component, Host, h, Prop, Fragment } from '@stencil/core';\nimport { ComponentExample } from './ComponentExample';\nimport { ComponentTestCode } from '../../test-utils/ComponentTestCode';\nimport { PreviewMode } from './PreviewMode';\nimport { ColourSettings } from '../../types/ColourSettings';\nimport { integerArray } from '../../utils/numberUtils';\n\n@Component({\n  tag: 'component-documentation',\n})\nexport class ComponentDocumentation {\n\n  @Prop() name: string;\n  @Prop() examples: ComponentExample[];\n  @Prop() colourSettings: ColourSettings;\n\n  render() {\n    return (\n      <Host>\n        <t-heading level={2} id={this.name}>{this.name}</t-heading>\n        {this.examples.map(example => (\n          <Example example={example} colourSettings={this.colourSettings} parentName={this.name}/>\n        ))}\n      </Host>\n    );\n  }\n}\n\ntype ExampleProps = {\n  example: ComponentExample;\n  colourSettings: ColourSettings;\n  parentName: string;\n};\n\nconst Example = ({ example, colourSettings, parentName }: ExampleProps) => {\n  const componentTestCode = new ComponentTestCode(example.code);\n  return (\n    <>\n      {example.title && <t-heading level={3} id={`${parentName}-${example.title}`}>{example.title}</t-heading>}\n      {example.description && <t-paragraph>{example.description}</t-paragraph>}\n      <t-column>\n        <Preview componentTestCode={componentTestCode} mode={example.previewMode} colourSettings={colourSettings}/>\n        <Code componentTestCode={componentTestCode}/>\n      </t-column>\n    </>\n  );\n};\n\ntype CodeProps = {\n  componentTestCode: ComponentTestCode;\n}\n\nconst Code = ({ componentTestCode }: CodeProps) => {\n  return (\n    <t-details summary=\"Vis kode\" openSummary=\"Skjul kode\">\n      <t-tabs>\n        <t-tab heading=\"HTML\">\n          <t-code language=\"html\" code={componentTestCode.generateCode()} />\n        </t-tab>\n        <t-tab heading=\"React\">\n          <t-code language=\"React\" code={componentTestCode.generateReactCode()} />\n        </t-tab>\n      </t-tabs>\n    </t-details>\n  );\n};\n\ntype PreviewProps = {\n  componentTestCode: ComponentTestCode;\n  mode: PreviewMode;\n  colourSettings: ColourSettings;\n};\n\nconst Preview = ({ componentTestCode, mode, colourSettings }: PreviewProps) => {\n  switch (mode) {\n    case 'iframe':\n      return <preview-iframe componentTestCode={componentTestCode}/>;\n    case 'inline':\n      return <InlinePreview componentTestCode={componentTestCode}/>;\n    case 'hue':\n      return <HuePreview componentTestCode={componentTestCode} colourSettings={colourSettings}/>;\n  }\n};\n\nconst InlinePreview = ({ componentTestCode }: { componentTestCode: ComponentTestCode }) => {\n  const testCode = componentTestCode.withId(componentTestCode.config.componentName);\n  return (\n    <component-preview componentTestCode={testCode}/>\n  );\n};\n\nconst HuePreview = ({ componentTestCode, colourSettings }: { componentTestCode: ComponentTestCode, colourSettings: ColourSettings }) => {\n  const hueArray = integerArray(colourSettings.numberOfHues);\n  return (\n    <t-row>\n      {hueArray.map(hue => {\n        const testCode = componentTestCode\n          .withHue(hue / colourSettings.numberOfHues)\n          .withId(`${componentTestCode.config.componentName}-${hue}`);\n        return (\n          <component-preview componentTestCode={testCode}/>\n        );\n      })}\n    </t-row>\n  );\n};\n"],"version":3}