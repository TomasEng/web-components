{"version":3,"names":["findUniqueIndex","array","value","unique","uniqueItems","indexOf","Set","reversed","slice","reverse","findLastIndex","predicate","reversedArray","indexInReversedArray","findIndex","length"],"sources":["src/utils/arrayUtils.ts"],"sourcesContent":["export const findUniqueIndex = <T>(array: T[], value: T) => {\n  const unique = uniqueItems(array);\n  return unique.indexOf(value);\n};\n\nexport const uniqueItems = <T>(array: T[]): T[] => [...new Set(array)];\n\nexport const reversed = <T>(array: T[]): T[] => array.slice().reverse();\n\nexport const findLastIndex = <T>(array: T[], predicate: (value: T) => boolean) => {\n  const reversedArray = reversed(array);\n  const indexInReversedArray = reversedArray.findIndex(predicate);\n  if (indexInReversedArray === -1) return -1;\n  if (indexInReversedArray === reversedArray.length - 1) return 0;\n  return (indexInReversedArray - reversedArray.length + 1) * -1;\n}\n"],"mappings":"MAAaA,EAAkB,CAAIC,EAAYC,KAC7C,MAAMC,EAASC,EAAYH,GAC3B,OAAOE,EAAOE,QAAQH,EAAM,E,MAGjBE,EAAkBH,GAAoB,IAAI,IAAIK,IAAIL,IAExD,MAAMM,EAAeN,GAAoBA,EAAMO,QAAQC,U,MAEjDC,EAAgB,CAAIT,EAAYU,KAC3C,MAAMC,EAAgBL,EAASN,GAC/B,MAAMY,EAAuBD,EAAcE,UAAUH,GACrD,GAAIE,KAA0B,EAAG,OAAQ,EACzC,GAAIA,IAAyBD,EAAcG,OAAS,EAAG,OAAO,EAC9D,OAAQF,EAAuBD,EAAcG,OAAS,IAAM,CAAC,S","ignoreList":[]}