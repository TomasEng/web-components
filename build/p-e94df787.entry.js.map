{"version":3,"names":["tPanelCss","TPanelStyle0","TPanel","heading","this","element","shadowRoot","querySelector","connectedCallback","setBaseColour","hueoffset","componentDidRender","hasHeading","hasIcon","hasHeadingOrIcon","style","display","render","h","Host","key","class","name"],"sources":["src/components/t-panel/t-panel.css?tag=t-panel&encapsulation=shadow","src/components/t-panel/t-panel.tsx"],"sourcesContent":[":host {\n  --top-shadow-inset: color-mix(in oklab, transparent 92%, white) inset 0 1px;\n  --bottom-shadow-inset: color-mix(in oklab, transparent 92%, black) inset 0 -1px;\n  --top-shadow: var(--top-shadow-inset);\n  --bottom-shadow: var(--bottom-shadow-inset);\n  --heading-colour: var(--t-panel-heading-colour);\n\n  background-attachment: fixed;\n  background-image: var(--t-image-panel-background);\n  background-size: 100vw 100vh;\n  border-radius: var(--t-border-radius-default);\n  box-shadow: var(--top-shadow), var(--bottom-shadow);\n  color: var(--t-font-colour-default);\n  display: block;\n  font-size: var(--t-default-font-size);\n}\n\n.heading {\n  align-items: center;\n  --background-filter-colour: color-mix(in oklab, var(--t-panel-heading-colour) 75%, transparent);\n  --background-filter: linear-gradient(var(--background-filter-colour), var(--background-filter-colour));\n  background-image: var(--background-filter), var(--t-background-image-app);\n  background-size: 100vw 100vh;\n  background-attachment: fixed;\n  border-top-left-radius: var(--t-border-radius-default);\n  border-top-right-radius: var(--t-border-radius-default);\n  box-shadow: var(--top-shadow-inset);\n  color: var(--t-colour-base-component-high-contrast);\n  display: flex;\n  padding: .5rem;\n}\n\nslot[name=\"heading\"] {\n  display: block;\n  flex: 1;\n  margin-left: .5rem;\n}\n\n.content {\n  padding: 1rem;\n}\n","import { Component, h, Host, Element, Prop } from '@stencil/core';\nimport { ComponentHue } from '../../types/ComponentHue';\nimport { setBaseColour } from '../../utils/componentUtils';\n\n@Component({\n  tag: 't-panel',\n  styleUrl: 't-panel.css',\n  shadow: true,\n})\nexport class TPanel {\n\n  @Element() element: HTMLElement;\n\n  @Prop() hueoffset: ComponentHue = 0;\n\n  get heading(): HTMLDivElement {\n    return this.element.shadowRoot.querySelector('.heading');\n  }\n\n  connectedCallback() {\n    setBaseColour(this.element, this.hueoffset);\n  }\n\n  componentDidRender() {\n    const hasHeading = !!this.element.querySelector('[slot=\"heading\"]');\n    const hasIcon = !!this.element.querySelector('[slot=\"icon\"]');\n    const hasHeadingOrIcon = hasHeading || hasIcon;\n    if (!hasHeadingOrIcon) {\n      this.heading.style.display = 'none';\n    } else {\n      this.heading.style.display = 'flex';\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class='heading'>\n          <slot name=\"icon\"/>\n          <slot name=\"heading\"/>\n        </div>\n        <div class='content'><slot></slot></div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"6FAAA,MAAMA,EAAY,mtCAClB,MAAAC,EAAeD,E,MCQFE,EAAM,M,wCAIiB,C,CAElC,WAAIC,GACF,OAAOC,KAAKC,QAAQC,WAAWC,cAAc,W,CAG/C,iBAAAC,GACEC,EAAcL,KAAKC,QAASD,KAAKM,U,CAGnC,kBAAAC,GACE,MAAMC,IAAeR,KAAKC,QAAQE,cAAc,oBAChD,MAAMM,IAAYT,KAAKC,QAAQE,cAAc,iBAC7C,MAAMO,EAAmBF,GAAcC,EACvC,IAAKC,EAAkB,CACrBV,KAAKD,QAAQY,MAAMC,QAAU,M,KACxB,CACLZ,KAAKD,QAAQY,MAAMC,QAAU,M,EAIjC,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,WACTH,EAAA,QAAAE,IAAA,2CAAME,KAAK,SACXJ,EAAA,QAAAE,IAAA,2CAAME,KAAK,aAEbJ,EAAA,OAAAE,IAAA,2CAAKC,MAAM,WAAUH,EAAA,QAAAE,IAAA,8C","ignoreList":[]}