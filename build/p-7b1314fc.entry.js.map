{"version":3,"names":["tPanelCss","TPanelStyle0","TPanel","heading","this","element","shadowRoot","querySelector","componentDidRender","hasHeading","hasIcon","hasHeadingOrIcon","style","display","render","h","Host","key","class","name"],"sources":["src/components/t-panel/t-panel.css?tag=t-panel&encapsulation=shadow","src/components/t-panel/t-panel.tsx"],"sourcesContent":[":host {\n  --top-shadow-inset: color-mix(in oklab, transparent 80%, white) inset 0 1px;\n  --top-shadow-outset: color-mix(in oklab, black 30%, transparent) 0 -1px 2px;\n  --bottom-shadow-inset: color-mix(in oklab, transparent 80%, black) inset 0 -1px;\n  --bottom-shadow-outset: color-mix(in oklab, white 30%, transparent) 0 1px 2px;\n  --top-shadow: var(--top-shadow-inset), var(--top-shadow-outset);\n  --bottom-shadow: var(--bottom-shadow-inset), var(--bottom-shadow-outset);\n\n  background-color: var(--t-panel-background-colour);\n  border-radius: var(--t-border-radius-default);\n  box-shadow: var(--top-shadow), var(--bottom-shadow);\n  color: var(--t-font-colour-default);\n  display: block;\n  font-size: var(--t-default-font-size);\n}\n\n.heading {\n  align-items: center;\n  background: linear-gradient(\n    to bottom,\n    color-mix(in oklab, var(--t-base-colour) 80%, white),\n    var(--t-base-colour)\n  );\n  border-top-left-radius: var(--t-border-radius-default);\n  border-top-right-radius: var(--t-border-radius-default);\n  box-shadow: var(--top-shadow-inset);\n  display: flex;\n  padding: .5rem;\n}\n\nslot[name=\"heading\"] {\n  display: block;\n  flex: 1;\n  margin-left: .5rem;\n}\n\n.content {\n  padding: 1rem;\n}\n","import { Component, h, Host, Element } from '@stencil/core';\n\n@Component({\n  tag: 't-panel',\n  styleUrl: 't-panel.css',\n  shadow: true,\n})\nexport class TPanel {\n\n  @Element() element: HTMLElement;\n\n  get heading(): HTMLDivElement {\n    return this.element.shadowRoot.querySelector('.heading');\n  }\n\n  componentDidRender() {\n    const hasHeading = !!this.element.querySelector('[slot=\"heading\"]');\n    const hasIcon = !!this.element.querySelector('[slot=\"icon\"]');\n    const hasHeadingOrIcon = hasHeading || hasIcon;\n    if (!hasHeadingOrIcon) {\n      this.heading.style.display = 'none';\n    } else {\n      this.heading.style.display = 'flex';\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class='heading'>\n          <slot name=\"icon\"/>\n          <slot name=\"heading\"/>\n        </div>\n        <div class='content'><slot></slot></div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAAY,ykCAClB,MAAAC,EAAeD,E,MCMFE,EAAM,M,yBAIjB,WAAIC,GACF,OAAOC,KAAKC,QAAQC,WAAWC,cAAc,W,CAG/C,kBAAAC,GACE,MAAMC,IAAeL,KAAKC,QAAQE,cAAc,oBAChD,MAAMG,IAAYN,KAAKC,QAAQE,cAAc,iBAC7C,MAAMI,EAAmBF,GAAcC,EACvC,IAAKC,EAAkB,CACrBP,KAAKD,QAAQS,MAAMC,QAAU,M,KACxB,CACLT,KAAKD,QAAQS,MAAMC,QAAU,M,EAIjC,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,WACTH,EAAA,QAAAE,IAAA,2CAAME,KAAK,SACXJ,EAAA,QAAAE,IAAA,2CAAME,KAAK,aAEbJ,EAAA,OAAAE,IAAA,2CAAKC,MAAM,WAAUH,EAAA,QAAAE,IAAA,8C"}