{"version":3,"names":["textInputCss","TSelectStyle0","TSelect","constructor","hostRef","this","hueoffset","labelPlacement","connectedCallback","setBaseColour","element","render","h","key","htmlFor","slot","label","id","class","options","map","option","value","selected"],"sources":["src/style/text-input.css?tag=t-select&encapsulation=shadow","src/components/t-select/t-select.tsx"],"sourcesContent":[".text-input {\r\n  --font-size: var(--t-default-font-size);\r\n  --height: var(--t-clickable-area-size);\r\n  --padding: calc((var(--height) - var(--t-default-font-size))/2);\r\n  background-color: var(--t-colour-input-field-background);\r\n  border-radius: 6px;\r\n  border: 1px solid var(--t-colour-base-component-high-contrast);\r\n  box-shadow: inset 1px 1px 1px rgba(0,0,0,0.3);\r\n  box-sizing: border-box;\r\n  color: var(--t-font-colour-default);\r\n  font-family: var(--t-default-font-family);\r\n  font-size: var(--font-size);\r\n  line-height: var(--font-size);\r\n  outline: none;\r\n  padding: var(--padding);\r\n  transition: var(--t-transition-duration-medium);\r\n}\r\n\r\n.text-input:focus {\r\n  transform: scale(1.05);\r\n  background-color: var(--t-colour-page-background);\r\n  box-shadow: color-mix(in oklab, var(--t-colour-base-component-high-contrast) 20%, transparent) 0 0 24px;\r\n}\r\n\r\n.text-input::selection {\r\n  background-color: var(--t-selection-background-colour);\r\n  color: var(--t-selection-font-colour);\r\n}\r\n","import { Component, h, Prop, Element } from '@stencil/core';\r\nimport { ComponentHue } from '../../types/ComponentHue';\r\nimport { TSelectOption } from './TSelectOption';\r\nimport { LabelPlacement } from '../../types/LabelPlacement';\r\nimport { setBaseColour } from '../../utils/componentUtils';\r\n\r\n@Component({\r\n  tag: 't-select',\r\n  styleUrls: ['../../style/text-input.css'],\r\n  shadow: true,\r\n})\r\nexport class TSelect {\r\n\r\n  @Element() element: HTMLTSelectElement;\r\n\r\n  @Prop() hueoffset: ComponentHue = 0;\r\n  @Prop() label: string;\r\n  @Prop() options: TSelectOption[];\r\n  @Prop() value: string;\r\n  @Prop() labelPlacement: LabelPlacement = 'top';\r\n\r\n  connectedCallback() {\r\n    setBaseColour(this.element, this.hueoffset);\r\n  }\r\n\r\n  render() {\r\n    return <internal-input-wrapper labelPlacement={this.labelPlacement}>\r\n      <label htmlFor=\"input\" slot=\"label\">{this.label}</label>\r\n      <select\r\n        slot=\"input\"\r\n        id=\"input\"\r\n        class=\"text-input\"\r\n      >\r\n        {this.options.map(option => (\r\n          <option\r\n            value={option.value}\r\n            selected={option.value === this.value}\r\n          >\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </internal-input-wrapper>;\r\n  }\r\n}\r\n"],"mappings":"sFAAA,MAAMA,EAAe,+2BACrB,MAAAC,EAAeD,E,MCUFE,EAAO,MALpB,WAAAC,CAAAC,G,UASUC,KAAAC,UAA0B,EAI1BD,KAAAE,eAAiC,K,CAEzC,iBAAAC,GACEC,EAAcJ,KAAKK,QAASL,KAAKC,U,CAGnC,MAAAK,GACE,OAAOC,EAAA,0BAAAC,IAAA,2CAAwBN,eAAgBF,KAAKE,gBAClDK,EAAA,SAAAC,IAAA,2CAAOC,QAAQ,QAAQC,KAAK,SAASV,KAAKW,OAC1CJ,EAAA,UAAAC,IAAA,2CACEE,KAAK,QACLE,GAAG,QACHC,MAAM,cAELb,KAAKc,QAAQC,KAAIC,GAChBT,EAAA,UACEU,MAAOD,EAAOC,MACdC,SAAUF,EAAOC,QAAUjB,KAAKiB,OAE/BD,EAAOL,U","ignoreList":[]}