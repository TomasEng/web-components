{"file":"t-article.entry.esm.js","mappings":";;;;AAAA,MAAM,WAAW,GAAG,8FAA8F;;MCSrG,QAAQ;;;uBAEgB,EAAE;8BACJ,QAAQ;;;IAK/B,MAAM,cAAc;QAC5B,MAAM,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QACjD,MAAM,iBAAiB,GAAsC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;QAC3G,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,gBAAgB;YACpF,OAAO,gBAAgB,CAAC,WAAW,EAAE,CAAC;SACvC,CAAC,CAAC,CAAC;QACJ,OAAO,WAAW,CAAC,SAAS,CAAC,CAAC;KAC/B;IAED,MAAM;QACJ,QACE,kEACE,kEAAW,KAAK,EAAE,CAAC,IAAG,IAAI,CAAC,OAAO,CAAa,EAC/C,8DAAa,EACZ,IAAI,CAAC,OAAO,KACX,kBACE,iBAAW,KAAK,EAAE,CAAC,IAAG,IAAI,CAAC,cAAc,CAAa,EACtD,qBAAe,OAAO,EAAE,EAAE,GAAI,CACvB,CACV,CACO,EACV;KACH;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,WAAW;YACpC,MAAM,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAC9D,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;YAC/D,IAAI,UAAU,EAAE;gBACd,UAAU,CAAC,OAAO,GAAG,cAAc,CAAC;aACrC;SACF,CAAC,CAAC;KACJ;;;;;;;","names":[],"sources":["src/components/t-article/t-article.css?tag=t-article","src/components/t-article/t-article.tsx"],"sourcesContent":[":host {\n  display: block;\n  color: var(--t-font-colour-default);\n}\n\np {\n  color: var(--t-font-colour-default);\n}\n","import { Component, Element, h, Method, Prop } from '@stencil/core';\nimport { TSourceItemList } from '../../types/TSourceItemList';\nimport { orderObject } from '../../utils/objectUtils';\nimport { uniqueItems } from '../../utils/arrayUtils';\n\n@Component({\n  tag: 't-article',\n  styleUrl: 't-article.css',\n})\nexport class TArticle {\n\n  @Prop() sources: TSourceItemList = {};\n  @Prop() sourcesHeading: string = 'Kilder';\n  @Prop() heading: string;\n\n  @Element() element: HTMLElement;\n\n  @Method() async getSourceOrder() {\n    await customElements.whenDefined('t-source-ref');\n    const sourceRefElements: NodeListOf<HTMLTSourceRefElement> = this.element.querySelectorAll('t-source-ref');\n    const sourceIds = await Promise.all(Array.from(sourceRefElements).map(sourceRefElement => {\n      return sourceRefElement.getSourceId();\n    }));\n    return uniqueItems(sourceIds);\n  }\n\n  render() {\n    return (\n      <article>\n        <t-heading level={1}>{this.heading}</t-heading>\n        <slot></slot>\n        {this.sources && (\n          <footer>\n            <t-heading level={2}>{this.sourcesHeading}</t-heading>\n            <t-source-list sources={{}} />\n          </footer>\n        )}\n      </article>\n    );\n  }\n\n  componentDidRender() {\n    this.getSourceOrder().then(sourceOrder => {\n      const orderedSources = orderObject(this.sources, sourceOrder);\n      const sourceList = this.element.querySelector('t-source-list');\n      if (sourceList) {\n        sourceList.sources = orderedSources;\n      }\n    });\n  }\n}\n"],"version":3}