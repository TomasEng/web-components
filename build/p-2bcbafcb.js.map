{"version":3,"names":["setCssProperty","element","key","value","style","setProperty","setBaseColour","hueOffsetInDegrees","toFixed","resizeClass","mode"],"sources":["src/utils/componentUtils.ts"],"sourcesContent":["import { GlobalState } from '../types/GlobalState';\nimport { ResizeMode } from '../types/ResizeMode';\n\nexport const setCssProperty = (element: HTMLElement, key: string, value: string) => {\n    element.style.setProperty(key, value);\n}\n\nexport const setBaseColour = (element: HTMLElement, hueOffsetInDegrees: number) => {\n  setCssProperty(\n    element,\n    '--t-colour-base-component',\n    `oklch(from var(--t-colour-base-app) l c calc(h + ${hueOffsetInDegrees.toFixed()}))`\n  );\n  setCssProperty(\n    element,\n    '--t-colour-base-component-high-contrast',\n    `oklch(from var(--t-colour-base-app-high-contrast) l c calc(h + ${hueOffsetInDegrees.toFixed()}))`\n  );\n  setCssProperty(\n    element,\n    '--t-colour-base-component-low-contrast',\n    `oklch(from var(--t-colour-base-app-low-contrast) l c calc(h + ${hueOffsetInDegrees.toFixed()}))`\n  );\n}\n\nexport const resizeClass = (mode: ResizeMode) => 't-resizable-' + mode;\n"],"mappings":"AAGO,MAAMA,EAAiB,CAACC,EAAsBC,EAAaC,KAC9DF,EAAQG,MAAMC,YAAYH,EAAKC,EAAM,E,MAG5BG,EAAgB,CAACL,EAAsBM,KAClDP,EACEC,EACA,4BACA,oDAAoDM,EAAmBC,eAEzER,EACEC,EACA,0CACA,kEAAkEM,EAAmBC,eAEvFR,EACEC,EACA,yCACA,iEAAiEM,EAAmBC,cACrF,E,MAGUC,EAAeC,GAAqB,eAAiBA,S"}