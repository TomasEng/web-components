{"version":3,"names":["tSliderCss","TSliderStyle0","TSlider","constructor","hostRef","this","max","min","step","handleInput","event","target","sliderChange","emit","valueAsNumber","render","h","key","htmlFor","inputId","slot","label","id","onInput","type","value"],"sources":["src/components/t-slider/t-slider.css?tag=t-slider&encapsulation=shadow","src/components/t-slider/t-slider.tsx"],"sourcesContent":["input {\r\n  --height: 1rem;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  height: var(--height);\r\n  background: var(--slider-background, grey);\r\n  border-radius: calc(var(--height) / 2);\r\n}\r\n\r\ninput::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: var(--height);\r\n  aspect-ratio: 1;\r\n  background-color: transparent;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  box-shadow: 0 0 0 2px #fff, 0 0 0 4px #000;\r\n}\r\n\r\ninput::-moz-range-thumb {\r\n  width: var(--height);\r\n  aspect-ratio: 1;\r\n  background-color: transparent;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  box-shadow: 0 0 0 2px #fff, 0 0 0 4px #000;\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 't-slider',\r\n  styleUrl: 't-slider.css',\r\n  shadow: true,\r\n})\r\nexport class TSlider {\r\n\r\n  @Prop() max: number = 1;\r\n  @Prop() min: number = 0;\r\n  @Prop() step: number = 0.01;\r\n  @Prop() label: string;\r\n  @Prop() value: number;\r\n\r\n  @Event() sliderChange: EventEmitter<number>;\r\n\r\n  handleInput = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.sliderChange.emit(target.valueAsNumber);\r\n  };\r\n\r\n  render() {\r\n    return <internal-input-wrapper>\r\n      <label htmlFor={inputId} slot='label'>{this.label}</label>\r\n      <input\r\n        id={inputId}\r\n        max={this.max}\r\n        min={this.min}\r\n        onInput={this.handleInput}\r\n        slot='input'\r\n        step={this.step}\r\n        type=\"range\"\r\n        value={this.value}\r\n      />\r\n    </internal-input-wrapper>;\r\n  }\r\n}\r\n\r\nconst inputId = 'input';\r\n"],"mappings":"kDAAA,MAAMA,EAAa,shBACnB,MAAAC,EAAeD,E,MCMFE,EAAO,MALpB,WAAAC,CAAAC,G,qDAOUC,KAAAC,IAAc,EACdD,KAAAE,IAAc,EACdF,KAAAG,KAAe,IAMvBH,KAAAI,YAAeC,IACb,MAAMC,EAASD,EAAMC,OACrBN,KAAKO,aAAaC,KAAKF,EAAOG,cAAc,C,CAG9C,MAAAC,GACE,OAAOC,EAAA,0BAAAC,IAAA,4CACLD,EAAA,SAAAC,IAAA,2CAAOC,QAASC,EAASC,KAAK,SAASf,KAAKgB,OAC5CL,EAAA,SAAAC,IAAA,2CACEK,GAAIH,EACJb,IAAKD,KAAKC,IACVC,IAAKF,KAAKE,IACVgB,QAASlB,KAAKI,YACdW,KAAK,QACLZ,KAAMH,KAAKG,KACXgB,KAAK,QACLC,MAAOpB,KAAKoB,Q,GAMpB,MAAMN,EAAU,Q","ignoreList":[]}